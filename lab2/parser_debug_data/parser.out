Grammar:

Rule 0     S' -> instructions_opt
Rule 1     instructions_opt -> <empty>
Rule 2     instructions_opt -> instructions
Rule 3     instructions -> instruction
Rule 4     instructions -> instructions instruction
Rule 5     instruction -> assignment LINE_END
Rule 6     instruction -> FOR ID ASSIGN expr RANGE expr instruction
Rule 7     instruction -> WHILE LPAREN expr RPAREN instruction
Rule 8     instruction -> IF LPAREN expr RPAREN instruction ELSE instruction  [precedence=nonassoc, level=2]
Rule 9     instruction -> IF LPAREN expr RPAREN instruction  [precedence=nonassoc, level=1]
Rule 10    instruction -> LBRACE instructions RBRACE
Rule 11    instruction -> CONTINUE LINE_END
Rule 12    instruction -> BREAK LINE_END
Rule 13    instruction -> RETURN expr LINE_END
Rule 14    instruction -> PRINT elements LINE_END
Rule 15    assignment -> ID LBRACKET elements RBRACKET assign expr
Rule 16    assignment -> ID assign expr
Rule 17    expr -> expr TRANSPOSE  [precedence=left, level=8]
Rule 18    expr -> vector
Rule 19    expr -> MINUS expr  [precedence=right, level=7]
Rule 20    expr -> ONES LPAREN elements RPAREN
Rule 21    expr -> ZEROS LPAREN elements RPAREN
Rule 22    expr -> EYE LPAREN elements RPAREN
Rule 23    expr -> ID
Rule 24    expr -> STRING
Rule 25    expr -> FLOATNUM
Rule 26    expr -> INTNUM
Rule 27    expr -> LPAREN expr RPAREN
Rule 28    expr -> expr DOTDIV expr  [precedence=left, level=6]
Rule 29    expr -> expr DOTMUL expr  [precedence=left, level=6]
Rule 30    expr -> expr DOTSUB expr  [precedence=left, level=5]
Rule 31    expr -> expr DOTADD expr  [precedence=left, level=5]
Rule 32    expr -> expr DIVIDE expr  [precedence=left, level=6]
Rule 33    expr -> expr TIMES expr  [precedence=left, level=6]
Rule 34    expr -> expr MINUS expr  [precedence=left, level=5]
Rule 35    expr -> expr PLUS expr  [precedence=left, level=5]
Rule 36    expr -> expr GTE expr  [precedence=nonassoc, level=4]
Rule 37    expr -> expr LTE expr  [precedence=nonassoc, level=4]
Rule 38    expr -> expr GT expr  [precedence=nonassoc, level=4]
Rule 39    expr -> expr LT expr  [precedence=nonassoc, level=4]
Rule 40    expr -> expr NEQ expr  [precedence=nonassoc, level=3]
Rule 41    expr -> expr EQ expr  [precedence=nonassoc, level=3]
Rule 42    expr -> ID LBRACKET elements RBRACKET
Rule 43    assign -> DIVASSIGN
Rule 44    assign -> MULASSIGN
Rule 45    assign -> SUBASSIGN
Rule 46    assign -> ADDASSIGN
Rule 47    assign -> ASSIGN
Rule 48    vector -> LBRACKET elements RBRACKET
Rule 49    elements -> expr
Rule 50    elements -> expr COMMA elements

Terminals, with rules where they appear:

ADDASSIGN            : 46
ASSIGN               : 6 47
BREAK                : 12
COMMA                : 50
CONTINUE             : 11
DIVASSIGN            : 43
DIVIDE               : 32
DOTADD               : 31
DOTDIV               : 28
DOTMUL               : 29
DOTSUB               : 30
ELSE                 : 8
EQ                   : 41
EYE                  : 22
FLOATNUM             : 25
FOR                  : 6
GT                   : 38
GTE                  : 36
ID                   : 6 15 16 23 42
IF                   : 8 9
INTNUM               : 26
LBRACE               : 10
LBRACKET             : 15 42 48
LINE_END             : 5 11 12 13 14
LPAREN               : 7 8 9 20 21 22 27
LT                   : 39
LTE                  : 37
MINUS                : 19 34
MULASSIGN            : 44
NEQ                  : 40
ONES                 : 20
PLUS                 : 35
PRINT                : 14
RANGE                : 6
RBRACE               : 10
RBRACKET             : 15 42 48
RETURN               : 13
RPAREN               : 7 8 9 20 21 22 27
STRING               : 24
SUBASSIGN            : 45
TIMES                : 33
TRANSPOSE            : 17
WHILE                : 7
ZEROS                : 21
error                : 

Nonterminals, with rules where they appear:

assign               : 15 16
assignment           : 5
elements             : 14 15 20 21 22 42 48 50
expr                 : 6 6 7 8 9 13 15 16 17 19 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 49 50
instruction          : 3 4 6 7 8 8 9
instructions         : 2 4 10
instructions_opt     : 0
vector               : 18


state 0

    (0) S' -> . instructions_opt
    (1) instructions_opt -> .
    (2) instructions_opt -> . instructions
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    $end            reduce using rule 1 (instructions_opt -> .)
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instructions_opt               shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4

state 1

    (0) S' -> instructions_opt .


state 2

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    $end            reduce using rule 2 (instructions_opt -> instructions .)
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 14
    assignment                     shift and go to state 4

state 3

    (3) instructions -> instruction .
    FOR             reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    LBRACE          reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    RBRACE          reduce using rule 3 (instructions -> instruction .)


state 4

    (5) instruction -> assignment . LINE_END
    LINE_END        shift and go to state 15


state 5

    (6) instruction -> FOR . ID ASSIGN expr RANGE expr instruction
    ID              shift and go to state 16


state 6

    (15) assignment -> ID . LBRACKET elements RBRACKET assign expr
    (16) assignment -> ID . assign expr
    (43) assign -> . DIVASSIGN
    (44) assign -> . MULASSIGN
    (45) assign -> . SUBASSIGN
    (46) assign -> . ADDASSIGN
    (47) assign -> . ASSIGN
    LBRACKET        shift and go to state 17
    DIVASSIGN       shift and go to state 19
    MULASSIGN       shift and go to state 20
    SUBASSIGN       shift and go to state 21
    ADDASSIGN       shift and go to state 22
    ASSIGN          shift and go to state 23

    assign                         shift and go to state 18

state 7

    (7) instruction -> WHILE . LPAREN expr RPAREN instruction
    LPAREN          shift and go to state 24


state 8

    (8) instruction -> IF . LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> IF . LPAREN expr RPAREN instruction
    LPAREN          shift and go to state 25


state 9

    (10) instruction -> LBRACE . instructions RBRACE
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instructions                   shift and go to state 26
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4

state 10

    (11) instruction -> CONTINUE . LINE_END
    LINE_END        shift and go to state 27


state 11

    (12) instruction -> BREAK . LINE_END
    LINE_END        shift and go to state 28


state 12

    (13) instruction -> RETURN . expr LINE_END
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 29
    vector                         shift and go to state 30

state 13

    (14) instruction -> PRINT . elements LINE_END
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 41
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 14

    (4) instructions -> instructions instruction .
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    LBRACE          reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    RBRACE          reduce using rule 4 (instructions -> instructions instruction .)


state 15

    (5) instruction -> assignment LINE_END .
    FOR             reduce using rule 5 (instruction -> assignment LINE_END .)
    WHILE           reduce using rule 5 (instruction -> assignment LINE_END .)
    IF              reduce using rule 5 (instruction -> assignment LINE_END .)
    LBRACE          reduce using rule 5 (instruction -> assignment LINE_END .)
    CONTINUE        reduce using rule 5 (instruction -> assignment LINE_END .)
    BREAK           reduce using rule 5 (instruction -> assignment LINE_END .)
    RETURN          reduce using rule 5 (instruction -> assignment LINE_END .)
    PRINT           reduce using rule 5 (instruction -> assignment LINE_END .)
    ID              reduce using rule 5 (instruction -> assignment LINE_END .)
    $end            reduce using rule 5 (instruction -> assignment LINE_END .)
    RBRACE          reduce using rule 5 (instruction -> assignment LINE_END .)
    ELSE            reduce using rule 5 (instruction -> assignment LINE_END .)


state 16

    (6) instruction -> FOR ID . ASSIGN expr RANGE expr instruction
    ASSIGN          shift and go to state 43


state 17

    (15) assignment -> ID LBRACKET . elements RBRACKET assign expr
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 44
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 18

    (16) assignment -> ID assign . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 45
    vector                         shift and go to state 30

state 19

    (43) assign -> DIVASSIGN .
    MINUS           reduce using rule 43 (assign -> DIVASSIGN .)
    ONES            reduce using rule 43 (assign -> DIVASSIGN .)
    ZEROS           reduce using rule 43 (assign -> DIVASSIGN .)
    EYE             reduce using rule 43 (assign -> DIVASSIGN .)
    ID              reduce using rule 43 (assign -> DIVASSIGN .)
    STRING          reduce using rule 43 (assign -> DIVASSIGN .)
    FLOATNUM        reduce using rule 43 (assign -> DIVASSIGN .)
    INTNUM          reduce using rule 43 (assign -> DIVASSIGN .)
    LPAREN          reduce using rule 43 (assign -> DIVASSIGN .)
    LBRACKET        reduce using rule 43 (assign -> DIVASSIGN .)


state 20

    (44) assign -> MULASSIGN .
    MINUS           reduce using rule 44 (assign -> MULASSIGN .)
    ONES            reduce using rule 44 (assign -> MULASSIGN .)
    ZEROS           reduce using rule 44 (assign -> MULASSIGN .)
    EYE             reduce using rule 44 (assign -> MULASSIGN .)
    ID              reduce using rule 44 (assign -> MULASSIGN .)
    STRING          reduce using rule 44 (assign -> MULASSIGN .)
    FLOATNUM        reduce using rule 44 (assign -> MULASSIGN .)
    INTNUM          reduce using rule 44 (assign -> MULASSIGN .)
    LPAREN          reduce using rule 44 (assign -> MULASSIGN .)
    LBRACKET        reduce using rule 44 (assign -> MULASSIGN .)


state 21

    (45) assign -> SUBASSIGN .
    MINUS           reduce using rule 45 (assign -> SUBASSIGN .)
    ONES            reduce using rule 45 (assign -> SUBASSIGN .)
    ZEROS           reduce using rule 45 (assign -> SUBASSIGN .)
    EYE             reduce using rule 45 (assign -> SUBASSIGN .)
    ID              reduce using rule 45 (assign -> SUBASSIGN .)
    STRING          reduce using rule 45 (assign -> SUBASSIGN .)
    FLOATNUM        reduce using rule 45 (assign -> SUBASSIGN .)
    INTNUM          reduce using rule 45 (assign -> SUBASSIGN .)
    LPAREN          reduce using rule 45 (assign -> SUBASSIGN .)
    LBRACKET        reduce using rule 45 (assign -> SUBASSIGN .)


state 22

    (46) assign -> ADDASSIGN .
    MINUS           reduce using rule 46 (assign -> ADDASSIGN .)
    ONES            reduce using rule 46 (assign -> ADDASSIGN .)
    ZEROS           reduce using rule 46 (assign -> ADDASSIGN .)
    EYE             reduce using rule 46 (assign -> ADDASSIGN .)
    ID              reduce using rule 46 (assign -> ADDASSIGN .)
    STRING          reduce using rule 46 (assign -> ADDASSIGN .)
    FLOATNUM        reduce using rule 46 (assign -> ADDASSIGN .)
    INTNUM          reduce using rule 46 (assign -> ADDASSIGN .)
    LPAREN          reduce using rule 46 (assign -> ADDASSIGN .)
    LBRACKET        reduce using rule 46 (assign -> ADDASSIGN .)


state 23

    (47) assign -> ASSIGN .
    MINUS           reduce using rule 47 (assign -> ASSIGN .)
    ONES            reduce using rule 47 (assign -> ASSIGN .)
    ZEROS           reduce using rule 47 (assign -> ASSIGN .)
    EYE             reduce using rule 47 (assign -> ASSIGN .)
    ID              reduce using rule 47 (assign -> ASSIGN .)
    STRING          reduce using rule 47 (assign -> ASSIGN .)
    FLOATNUM        reduce using rule 47 (assign -> ASSIGN .)
    INTNUM          reduce using rule 47 (assign -> ASSIGN .)
    LPAREN          reduce using rule 47 (assign -> ASSIGN .)
    LBRACKET        reduce using rule 47 (assign -> ASSIGN .)


state 24

    (7) instruction -> WHILE LPAREN . expr RPAREN instruction
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 46
    vector                         shift and go to state 30

state 25

    (8) instruction -> IF LPAREN . expr RPAREN instruction ELSE instruction
    (9) instruction -> IF LPAREN . expr RPAREN instruction
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 47
    vector                         shift and go to state 30

state 26

    (10) instruction -> LBRACE instructions . RBRACE
    (4) instructions -> instructions . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    RBRACE          shift and go to state 48
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 14
    assignment                     shift and go to state 4

state 27

    (11) instruction -> CONTINUE LINE_END .
    FOR             reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    WHILE           reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    IF              reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    LBRACE          reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    CONTINUE        reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    BREAK           reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    RETURN          reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    PRINT           reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    ID              reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    $end            reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    RBRACE          reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    ELSE            reduce using rule 11 (instruction -> CONTINUE LINE_END .)


state 28

    (12) instruction -> BREAK LINE_END .
    FOR             reduce using rule 12 (instruction -> BREAK LINE_END .)
    WHILE           reduce using rule 12 (instruction -> BREAK LINE_END .)
    IF              reduce using rule 12 (instruction -> BREAK LINE_END .)
    LBRACE          reduce using rule 12 (instruction -> BREAK LINE_END .)
    CONTINUE        reduce using rule 12 (instruction -> BREAK LINE_END .)
    BREAK           reduce using rule 12 (instruction -> BREAK LINE_END .)
    RETURN          reduce using rule 12 (instruction -> BREAK LINE_END .)
    PRINT           reduce using rule 12 (instruction -> BREAK LINE_END .)
    ID              reduce using rule 12 (instruction -> BREAK LINE_END .)
    $end            reduce using rule 12 (instruction -> BREAK LINE_END .)
    RBRACE          reduce using rule 12 (instruction -> BREAK LINE_END .)
    ELSE            reduce using rule 12 (instruction -> BREAK LINE_END .)


state 29

    (13) instruction -> RETURN expr . LINE_END
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        shift and go to state 49
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 30

    (18) expr -> vector .
    LINE_END        reduce using rule 18 (expr -> vector .)
    TRANSPOSE       reduce using rule 18 (expr -> vector .)
    DOTDIV          reduce using rule 18 (expr -> vector .)
    DOTMUL          reduce using rule 18 (expr -> vector .)
    DOTSUB          reduce using rule 18 (expr -> vector .)
    DOTADD          reduce using rule 18 (expr -> vector .)
    DIVIDE          reduce using rule 18 (expr -> vector .)
    TIMES           reduce using rule 18 (expr -> vector .)
    MINUS           reduce using rule 18 (expr -> vector .)
    PLUS            reduce using rule 18 (expr -> vector .)
    GTE             reduce using rule 18 (expr -> vector .)
    LTE             reduce using rule 18 (expr -> vector .)
    GT              reduce using rule 18 (expr -> vector .)
    LT              reduce using rule 18 (expr -> vector .)
    NEQ             reduce using rule 18 (expr -> vector .)
    EQ              reduce using rule 18 (expr -> vector .)
    COMMA           reduce using rule 18 (expr -> vector .)
    RBRACKET        reduce using rule 18 (expr -> vector .)
    RPAREN          reduce using rule 18 (expr -> vector .)
    RANGE           reduce using rule 18 (expr -> vector .)
    FOR             reduce using rule 18 (expr -> vector .)
    WHILE           reduce using rule 18 (expr -> vector .)
    IF              reduce using rule 18 (expr -> vector .)
    LBRACE          reduce using rule 18 (expr -> vector .)
    CONTINUE        reduce using rule 18 (expr -> vector .)
    BREAK           reduce using rule 18 (expr -> vector .)
    RETURN          reduce using rule 18 (expr -> vector .)
    PRINT           reduce using rule 18 (expr -> vector .)
    ID              reduce using rule 18 (expr -> vector .)


state 31

    (19) expr -> MINUS . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 65
    vector                         shift and go to state 30

state 32

    (20) expr -> ONES . LPAREN elements RPAREN
    LPAREN          shift and go to state 66


state 33

    (27) expr -> LPAREN . expr RPAREN
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 67
    vector                         shift and go to state 30

state 34

    (21) expr -> ZEROS . LPAREN elements RPAREN
    LPAREN          shift and go to state 68


state 35

    (22) expr -> EYE . LPAREN elements RPAREN
    LPAREN          shift and go to state 69


state 36

    (23) expr -> ID .
    (42) expr -> ID . LBRACKET elements RBRACKET
    LINE_END        reduce using rule 23 (expr -> ID .)
    TRANSPOSE       reduce using rule 23 (expr -> ID .)
    DOTDIV          reduce using rule 23 (expr -> ID .)
    DOTMUL          reduce using rule 23 (expr -> ID .)
    DOTSUB          reduce using rule 23 (expr -> ID .)
    DOTADD          reduce using rule 23 (expr -> ID .)
    DIVIDE          reduce using rule 23 (expr -> ID .)
    TIMES           reduce using rule 23 (expr -> ID .)
    MINUS           reduce using rule 23 (expr -> ID .)
    PLUS            reduce using rule 23 (expr -> ID .)
    GTE             reduce using rule 23 (expr -> ID .)
    LTE             reduce using rule 23 (expr -> ID .)
    GT              reduce using rule 23 (expr -> ID .)
    LT              reduce using rule 23 (expr -> ID .)
    NEQ             reduce using rule 23 (expr -> ID .)
    EQ              reduce using rule 23 (expr -> ID .)
    COMMA           reduce using rule 23 (expr -> ID .)
    RBRACKET        reduce using rule 23 (expr -> ID .)
    RPAREN          reduce using rule 23 (expr -> ID .)
    RANGE           reduce using rule 23 (expr -> ID .)
    FOR             reduce using rule 23 (expr -> ID .)
    WHILE           reduce using rule 23 (expr -> ID .)
    IF              reduce using rule 23 (expr -> ID .)
    LBRACE          reduce using rule 23 (expr -> ID .)
    CONTINUE        reduce using rule 23 (expr -> ID .)
    BREAK           reduce using rule 23 (expr -> ID .)
    RETURN          reduce using rule 23 (expr -> ID .)
    PRINT           reduce using rule 23 (expr -> ID .)
    ID              reduce using rule 23 (expr -> ID .)
    LBRACKET        shift and go to state 70


state 37

    (24) expr -> STRING .
    LINE_END        reduce using rule 24 (expr -> STRING .)
    TRANSPOSE       reduce using rule 24 (expr -> STRING .)
    DOTDIV          reduce using rule 24 (expr -> STRING .)
    DOTMUL          reduce using rule 24 (expr -> STRING .)
    DOTSUB          reduce using rule 24 (expr -> STRING .)
    DOTADD          reduce using rule 24 (expr -> STRING .)
    DIVIDE          reduce using rule 24 (expr -> STRING .)
    TIMES           reduce using rule 24 (expr -> STRING .)
    MINUS           reduce using rule 24 (expr -> STRING .)
    PLUS            reduce using rule 24 (expr -> STRING .)
    GTE             reduce using rule 24 (expr -> STRING .)
    LTE             reduce using rule 24 (expr -> STRING .)
    GT              reduce using rule 24 (expr -> STRING .)
    LT              reduce using rule 24 (expr -> STRING .)
    NEQ             reduce using rule 24 (expr -> STRING .)
    EQ              reduce using rule 24 (expr -> STRING .)
    COMMA           reduce using rule 24 (expr -> STRING .)
    RBRACKET        reduce using rule 24 (expr -> STRING .)
    RPAREN          reduce using rule 24 (expr -> STRING .)
    RANGE           reduce using rule 24 (expr -> STRING .)
    FOR             reduce using rule 24 (expr -> STRING .)
    WHILE           reduce using rule 24 (expr -> STRING .)
    IF              reduce using rule 24 (expr -> STRING .)
    LBRACE          reduce using rule 24 (expr -> STRING .)
    CONTINUE        reduce using rule 24 (expr -> STRING .)
    BREAK           reduce using rule 24 (expr -> STRING .)
    RETURN          reduce using rule 24 (expr -> STRING .)
    PRINT           reduce using rule 24 (expr -> STRING .)
    ID              reduce using rule 24 (expr -> STRING .)


state 38

    (25) expr -> FLOATNUM .
    LINE_END        reduce using rule 25 (expr -> FLOATNUM .)
    TRANSPOSE       reduce using rule 25 (expr -> FLOATNUM .)
    DOTDIV          reduce using rule 25 (expr -> FLOATNUM .)
    DOTMUL          reduce using rule 25 (expr -> FLOATNUM .)
    DOTSUB          reduce using rule 25 (expr -> FLOATNUM .)
    DOTADD          reduce using rule 25 (expr -> FLOATNUM .)
    DIVIDE          reduce using rule 25 (expr -> FLOATNUM .)
    TIMES           reduce using rule 25 (expr -> FLOATNUM .)
    MINUS           reduce using rule 25 (expr -> FLOATNUM .)
    PLUS            reduce using rule 25 (expr -> FLOATNUM .)
    GTE             reduce using rule 25 (expr -> FLOATNUM .)
    LTE             reduce using rule 25 (expr -> FLOATNUM .)
    GT              reduce using rule 25 (expr -> FLOATNUM .)
    LT              reduce using rule 25 (expr -> FLOATNUM .)
    NEQ             reduce using rule 25 (expr -> FLOATNUM .)
    EQ              reduce using rule 25 (expr -> FLOATNUM .)
    COMMA           reduce using rule 25 (expr -> FLOATNUM .)
    RBRACKET        reduce using rule 25 (expr -> FLOATNUM .)
    RPAREN          reduce using rule 25 (expr -> FLOATNUM .)
    RANGE           reduce using rule 25 (expr -> FLOATNUM .)
    FOR             reduce using rule 25 (expr -> FLOATNUM .)
    WHILE           reduce using rule 25 (expr -> FLOATNUM .)
    IF              reduce using rule 25 (expr -> FLOATNUM .)
    LBRACE          reduce using rule 25 (expr -> FLOATNUM .)
    CONTINUE        reduce using rule 25 (expr -> FLOATNUM .)
    BREAK           reduce using rule 25 (expr -> FLOATNUM .)
    RETURN          reduce using rule 25 (expr -> FLOATNUM .)
    PRINT           reduce using rule 25 (expr -> FLOATNUM .)
    ID              reduce using rule 25 (expr -> FLOATNUM .)


state 39

    (26) expr -> INTNUM .
    LINE_END        reduce using rule 26 (expr -> INTNUM .)
    TRANSPOSE       reduce using rule 26 (expr -> INTNUM .)
    DOTDIV          reduce using rule 26 (expr -> INTNUM .)
    DOTMUL          reduce using rule 26 (expr -> INTNUM .)
    DOTSUB          reduce using rule 26 (expr -> INTNUM .)
    DOTADD          reduce using rule 26 (expr -> INTNUM .)
    DIVIDE          reduce using rule 26 (expr -> INTNUM .)
    TIMES           reduce using rule 26 (expr -> INTNUM .)
    MINUS           reduce using rule 26 (expr -> INTNUM .)
    PLUS            reduce using rule 26 (expr -> INTNUM .)
    GTE             reduce using rule 26 (expr -> INTNUM .)
    LTE             reduce using rule 26 (expr -> INTNUM .)
    GT              reduce using rule 26 (expr -> INTNUM .)
    LT              reduce using rule 26 (expr -> INTNUM .)
    NEQ             reduce using rule 26 (expr -> INTNUM .)
    EQ              reduce using rule 26 (expr -> INTNUM .)
    COMMA           reduce using rule 26 (expr -> INTNUM .)
    RBRACKET        reduce using rule 26 (expr -> INTNUM .)
    RPAREN          reduce using rule 26 (expr -> INTNUM .)
    RANGE           reduce using rule 26 (expr -> INTNUM .)
    FOR             reduce using rule 26 (expr -> INTNUM .)
    WHILE           reduce using rule 26 (expr -> INTNUM .)
    IF              reduce using rule 26 (expr -> INTNUM .)
    LBRACE          reduce using rule 26 (expr -> INTNUM .)
    CONTINUE        reduce using rule 26 (expr -> INTNUM .)
    BREAK           reduce using rule 26 (expr -> INTNUM .)
    RETURN          reduce using rule 26 (expr -> INTNUM .)
    PRINT           reduce using rule 26 (expr -> INTNUM .)
    ID              reduce using rule 26 (expr -> INTNUM .)


state 40

    (48) vector -> LBRACKET . elements RBRACKET
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 71
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 41

    (14) instruction -> PRINT elements . LINE_END
    LINE_END        shift and go to state 72


state 42

    (49) elements -> expr .
    (50) elements -> expr . COMMA elements
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 49 (elements -> expr .)
    RBRACKET        reduce using rule 49 (elements -> expr .)
    RPAREN          reduce using rule 49 (elements -> expr .)
    COMMA           shift and go to state 73
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 43

    (6) instruction -> FOR ID ASSIGN . expr RANGE expr instruction
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 74
    vector                         shift and go to state 30

state 44

    (15) assignment -> ID LBRACKET elements . RBRACKET assign expr
    RBRACKET        shift and go to state 75


state 45

    (16) assignment -> ID assign expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 16 (assignment -> ID assign expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 46

    (7) instruction -> WHILE LPAREN expr . RPAREN instruction
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    RPAREN          shift and go to state 76
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 47

    (8) instruction -> IF LPAREN expr . RPAREN instruction ELSE instruction
    (9) instruction -> IF LPAREN expr . RPAREN instruction
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    RPAREN          shift and go to state 77
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 48

    (10) instruction -> LBRACE instructions RBRACE .
    FOR             reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    WHILE           reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    IF              reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    LBRACE          reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    CONTINUE        reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    BREAK           reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    RETURN          reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    PRINT           reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    ID              reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    $end            reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    RBRACE          reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    ELSE            reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)


state 49

    (13) instruction -> RETURN expr LINE_END .
    FOR             reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    WHILE           reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    IF              reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    LBRACE          reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    CONTINUE        reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    BREAK           reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    RETURN          reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    PRINT           reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    ID              reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    $end            reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    RBRACE          reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    ELSE            reduce using rule 13 (instruction -> RETURN expr LINE_END .)


state 50

    (17) expr -> expr TRANSPOSE .
    LINE_END        reduce using rule 17 (expr -> expr TRANSPOSE .)
    TRANSPOSE       reduce using rule 17 (expr -> expr TRANSPOSE .)
    DOTDIV          reduce using rule 17 (expr -> expr TRANSPOSE .)
    DOTMUL          reduce using rule 17 (expr -> expr TRANSPOSE .)
    DOTSUB          reduce using rule 17 (expr -> expr TRANSPOSE .)
    DOTADD          reduce using rule 17 (expr -> expr TRANSPOSE .)
    DIVIDE          reduce using rule 17 (expr -> expr TRANSPOSE .)
    TIMES           reduce using rule 17 (expr -> expr TRANSPOSE .)
    MINUS           reduce using rule 17 (expr -> expr TRANSPOSE .)
    PLUS            reduce using rule 17 (expr -> expr TRANSPOSE .)
    GTE             reduce using rule 17 (expr -> expr TRANSPOSE .)
    LTE             reduce using rule 17 (expr -> expr TRANSPOSE .)
    GT              reduce using rule 17 (expr -> expr TRANSPOSE .)
    LT              reduce using rule 17 (expr -> expr TRANSPOSE .)
    NEQ             reduce using rule 17 (expr -> expr TRANSPOSE .)
    EQ              reduce using rule 17 (expr -> expr TRANSPOSE .)
    COMMA           reduce using rule 17 (expr -> expr TRANSPOSE .)
    RBRACKET        reduce using rule 17 (expr -> expr TRANSPOSE .)
    RPAREN          reduce using rule 17 (expr -> expr TRANSPOSE .)
    RANGE           reduce using rule 17 (expr -> expr TRANSPOSE .)
    FOR             reduce using rule 17 (expr -> expr TRANSPOSE .)
    WHILE           reduce using rule 17 (expr -> expr TRANSPOSE .)
    IF              reduce using rule 17 (expr -> expr TRANSPOSE .)
    LBRACE          reduce using rule 17 (expr -> expr TRANSPOSE .)
    CONTINUE        reduce using rule 17 (expr -> expr TRANSPOSE .)
    BREAK           reduce using rule 17 (expr -> expr TRANSPOSE .)
    RETURN          reduce using rule 17 (expr -> expr TRANSPOSE .)
    PRINT           reduce using rule 17 (expr -> expr TRANSPOSE .)
    ID              reduce using rule 17 (expr -> expr TRANSPOSE .)


state 51

    (28) expr -> expr DOTDIV . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 78
    vector                         shift and go to state 30

state 52

    (29) expr -> expr DOTMUL . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 79
    vector                         shift and go to state 30

state 53

    (30) expr -> expr DOTSUB . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 80
    vector                         shift and go to state 30

state 54

    (31) expr -> expr DOTADD . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 81
    vector                         shift and go to state 30

state 55

    (32) expr -> expr DIVIDE . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 82
    vector                         shift and go to state 30

state 56

    (33) expr -> expr TIMES . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 83
    vector                         shift and go to state 30

state 57

    (34) expr -> expr MINUS . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 84
    vector                         shift and go to state 30

state 58

    (35) expr -> expr PLUS . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 85
    vector                         shift and go to state 30

state 59

    (36) expr -> expr GTE . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 86
    vector                         shift and go to state 30

state 60

    (37) expr -> expr LTE . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 87
    vector                         shift and go to state 30

state 61

    (38) expr -> expr GT . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 88
    vector                         shift and go to state 30

state 62

    (39) expr -> expr LT . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 89
    vector                         shift and go to state 30

state 63

    (40) expr -> expr NEQ . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 90
    vector                         shift and go to state 30

state 64

    (41) expr -> expr EQ . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 91
    vector                         shift and go to state 30

state 65

    (19) expr -> MINUS expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 19 (expr -> MINUS expr .)
    DOTDIV          reduce using rule 19 (expr -> MINUS expr .)
    DOTMUL          reduce using rule 19 (expr -> MINUS expr .)
    DOTSUB          reduce using rule 19 (expr -> MINUS expr .)
    DOTADD          reduce using rule 19 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 19 (expr -> MINUS expr .)
    TIMES           reduce using rule 19 (expr -> MINUS expr .)
    MINUS           reduce using rule 19 (expr -> MINUS expr .)
    PLUS            reduce using rule 19 (expr -> MINUS expr .)
    GTE             reduce using rule 19 (expr -> MINUS expr .)
    LTE             reduce using rule 19 (expr -> MINUS expr .)
    GT              reduce using rule 19 (expr -> MINUS expr .)
    LT              reduce using rule 19 (expr -> MINUS expr .)
    NEQ             reduce using rule 19 (expr -> MINUS expr .)
    EQ              reduce using rule 19 (expr -> MINUS expr .)
    COMMA           reduce using rule 19 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 19 (expr -> MINUS expr .)
    RPAREN          reduce using rule 19 (expr -> MINUS expr .)
    RANGE           reduce using rule 19 (expr -> MINUS expr .)
    FOR             reduce using rule 19 (expr -> MINUS expr .)
    WHILE           reduce using rule 19 (expr -> MINUS expr .)
    IF              reduce using rule 19 (expr -> MINUS expr .)
    LBRACE          reduce using rule 19 (expr -> MINUS expr .)
    CONTINUE        reduce using rule 19 (expr -> MINUS expr .)
    BREAK           reduce using rule 19 (expr -> MINUS expr .)
    RETURN          reduce using rule 19 (expr -> MINUS expr .)
    PRINT           reduce using rule 19 (expr -> MINUS expr .)
    ID              reduce using rule 19 (expr -> MINUS expr .)
    TRANSPOSE       shift and go to state 50


state 66

    (20) expr -> ONES LPAREN . elements RPAREN
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 92
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 67

    (27) expr -> LPAREN expr . RPAREN
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    RPAREN          shift and go to state 93
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 68

    (21) expr -> ZEROS LPAREN . elements RPAREN
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 94
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 69

    (22) expr -> EYE LPAREN . elements RPAREN
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 95
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 70

    (42) expr -> ID LBRACKET . elements RBRACKET
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    elements                       shift and go to state 96
    expr                           shift and go to state 42
    vector                         shift and go to state 30

state 71

    (48) vector -> LBRACKET elements . RBRACKET
    RBRACKET        shift and go to state 97


state 72

    (14) instruction -> PRINT elements LINE_END .
    FOR             reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    WHILE           reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    IF              reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    LBRACE          reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    CONTINUE        reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    BREAK           reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    RETURN          reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    PRINT           reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    ID              reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    $end            reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    RBRACE          reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    ELSE            reduce using rule 14 (instruction -> PRINT elements LINE_END .)


state 73

    (50) elements -> expr COMMA . elements
    (49) elements -> . expr
    (50) elements -> . expr COMMA elements
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 42
    elements                       shift and go to state 98
    vector                         shift and go to state 30

state 74

    (6) instruction -> FOR ID ASSIGN expr . RANGE expr instruction
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    RANGE           shift and go to state 99
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 75

    (15) assignment -> ID LBRACKET elements RBRACKET . assign expr
    (43) assign -> . DIVASSIGN
    (44) assign -> . MULASSIGN
    (45) assign -> . SUBASSIGN
    (46) assign -> . ADDASSIGN
    (47) assign -> . ASSIGN
    DIVASSIGN       shift and go to state 19
    MULASSIGN       shift and go to state 20
    SUBASSIGN       shift and go to state 21
    ADDASSIGN       shift and go to state 22
    ASSIGN          shift and go to state 23

    assign                         shift and go to state 100

state 76

    (7) instruction -> WHILE LPAREN expr RPAREN . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 101
    assignment                     shift and go to state 4

state 77

    (8) instruction -> IF LPAREN expr RPAREN . instruction ELSE instruction
    (9) instruction -> IF LPAREN expr RPAREN . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 102
    assignment                     shift and go to state 4

state 78

    (28) expr -> expr DOTDIV expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 28 (expr -> expr DOTDIV expr .)
    DOTDIV          reduce using rule 28 (expr -> expr DOTDIV expr .)
    DOTMUL          reduce using rule 28 (expr -> expr DOTDIV expr .)
    DOTSUB          reduce using rule 28 (expr -> expr DOTDIV expr .)
    DOTADD          reduce using rule 28 (expr -> expr DOTDIV expr .)
    DIVIDE          reduce using rule 28 (expr -> expr DOTDIV expr .)
    TIMES           reduce using rule 28 (expr -> expr DOTDIV expr .)
    MINUS           reduce using rule 28 (expr -> expr DOTDIV expr .)
    PLUS            reduce using rule 28 (expr -> expr DOTDIV expr .)
    GTE             reduce using rule 28 (expr -> expr DOTDIV expr .)
    LTE             reduce using rule 28 (expr -> expr DOTDIV expr .)
    GT              reduce using rule 28 (expr -> expr DOTDIV expr .)
    LT              reduce using rule 28 (expr -> expr DOTDIV expr .)
    NEQ             reduce using rule 28 (expr -> expr DOTDIV expr .)
    EQ              reduce using rule 28 (expr -> expr DOTDIV expr .)
    COMMA           reduce using rule 28 (expr -> expr DOTDIV expr .)
    RBRACKET        reduce using rule 28 (expr -> expr DOTDIV expr .)
    RPAREN          reduce using rule 28 (expr -> expr DOTDIV expr .)
    RANGE           reduce using rule 28 (expr -> expr DOTDIV expr .)
    FOR             reduce using rule 28 (expr -> expr DOTDIV expr .)
    WHILE           reduce using rule 28 (expr -> expr DOTDIV expr .)
    IF              reduce using rule 28 (expr -> expr DOTDIV expr .)
    LBRACE          reduce using rule 28 (expr -> expr DOTDIV expr .)
    CONTINUE        reduce using rule 28 (expr -> expr DOTDIV expr .)
    BREAK           reduce using rule 28 (expr -> expr DOTDIV expr .)
    RETURN          reduce using rule 28 (expr -> expr DOTDIV expr .)
    PRINT           reduce using rule 28 (expr -> expr DOTDIV expr .)
    ID              reduce using rule 28 (expr -> expr DOTDIV expr .)
    TRANSPOSE       shift and go to state 50


state 79

    (29) expr -> expr DOTMUL expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 29 (expr -> expr DOTMUL expr .)
    DOTDIV          reduce using rule 29 (expr -> expr DOTMUL expr .)
    DOTMUL          reduce using rule 29 (expr -> expr DOTMUL expr .)
    DOTSUB          reduce using rule 29 (expr -> expr DOTMUL expr .)
    DOTADD          reduce using rule 29 (expr -> expr DOTMUL expr .)
    DIVIDE          reduce using rule 29 (expr -> expr DOTMUL expr .)
    TIMES           reduce using rule 29 (expr -> expr DOTMUL expr .)
    MINUS           reduce using rule 29 (expr -> expr DOTMUL expr .)
    PLUS            reduce using rule 29 (expr -> expr DOTMUL expr .)
    GTE             reduce using rule 29 (expr -> expr DOTMUL expr .)
    LTE             reduce using rule 29 (expr -> expr DOTMUL expr .)
    GT              reduce using rule 29 (expr -> expr DOTMUL expr .)
    LT              reduce using rule 29 (expr -> expr DOTMUL expr .)
    NEQ             reduce using rule 29 (expr -> expr DOTMUL expr .)
    EQ              reduce using rule 29 (expr -> expr DOTMUL expr .)
    COMMA           reduce using rule 29 (expr -> expr DOTMUL expr .)
    RBRACKET        reduce using rule 29 (expr -> expr DOTMUL expr .)
    RPAREN          reduce using rule 29 (expr -> expr DOTMUL expr .)
    RANGE           reduce using rule 29 (expr -> expr DOTMUL expr .)
    FOR             reduce using rule 29 (expr -> expr DOTMUL expr .)
    WHILE           reduce using rule 29 (expr -> expr DOTMUL expr .)
    IF              reduce using rule 29 (expr -> expr DOTMUL expr .)
    LBRACE          reduce using rule 29 (expr -> expr DOTMUL expr .)
    CONTINUE        reduce using rule 29 (expr -> expr DOTMUL expr .)
    BREAK           reduce using rule 29 (expr -> expr DOTMUL expr .)
    RETURN          reduce using rule 29 (expr -> expr DOTMUL expr .)
    PRINT           reduce using rule 29 (expr -> expr DOTMUL expr .)
    ID              reduce using rule 29 (expr -> expr DOTMUL expr .)
    TRANSPOSE       shift and go to state 50


state 80

    (30) expr -> expr DOTSUB expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 30 (expr -> expr DOTSUB expr .)
    DOTSUB          reduce using rule 30 (expr -> expr DOTSUB expr .)
    DOTADD          reduce using rule 30 (expr -> expr DOTSUB expr .)
    MINUS           reduce using rule 30 (expr -> expr DOTSUB expr .)
    PLUS            reduce using rule 30 (expr -> expr DOTSUB expr .)
    GTE             reduce using rule 30 (expr -> expr DOTSUB expr .)
    LTE             reduce using rule 30 (expr -> expr DOTSUB expr .)
    GT              reduce using rule 30 (expr -> expr DOTSUB expr .)
    LT              reduce using rule 30 (expr -> expr DOTSUB expr .)
    NEQ             reduce using rule 30 (expr -> expr DOTSUB expr .)
    EQ              reduce using rule 30 (expr -> expr DOTSUB expr .)
    COMMA           reduce using rule 30 (expr -> expr DOTSUB expr .)
    RBRACKET        reduce using rule 30 (expr -> expr DOTSUB expr .)
    RPAREN          reduce using rule 30 (expr -> expr DOTSUB expr .)
    RANGE           reduce using rule 30 (expr -> expr DOTSUB expr .)
    FOR             reduce using rule 30 (expr -> expr DOTSUB expr .)
    WHILE           reduce using rule 30 (expr -> expr DOTSUB expr .)
    IF              reduce using rule 30 (expr -> expr DOTSUB expr .)
    LBRACE          reduce using rule 30 (expr -> expr DOTSUB expr .)
    CONTINUE        reduce using rule 30 (expr -> expr DOTSUB expr .)
    BREAK           reduce using rule 30 (expr -> expr DOTSUB expr .)
    RETURN          reduce using rule 30 (expr -> expr DOTSUB expr .)
    PRINT           reduce using rule 30 (expr -> expr DOTSUB expr .)
    ID              reduce using rule 30 (expr -> expr DOTSUB expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56


state 81

    (31) expr -> expr DOTADD expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 31 (expr -> expr DOTADD expr .)
    DOTSUB          reduce using rule 31 (expr -> expr DOTADD expr .)
    DOTADD          reduce using rule 31 (expr -> expr DOTADD expr .)
    MINUS           reduce using rule 31 (expr -> expr DOTADD expr .)
    PLUS            reduce using rule 31 (expr -> expr DOTADD expr .)
    GTE             reduce using rule 31 (expr -> expr DOTADD expr .)
    LTE             reduce using rule 31 (expr -> expr DOTADD expr .)
    GT              reduce using rule 31 (expr -> expr DOTADD expr .)
    LT              reduce using rule 31 (expr -> expr DOTADD expr .)
    NEQ             reduce using rule 31 (expr -> expr DOTADD expr .)
    EQ              reduce using rule 31 (expr -> expr DOTADD expr .)
    COMMA           reduce using rule 31 (expr -> expr DOTADD expr .)
    RBRACKET        reduce using rule 31 (expr -> expr DOTADD expr .)
    RPAREN          reduce using rule 31 (expr -> expr DOTADD expr .)
    RANGE           reduce using rule 31 (expr -> expr DOTADD expr .)
    FOR             reduce using rule 31 (expr -> expr DOTADD expr .)
    WHILE           reduce using rule 31 (expr -> expr DOTADD expr .)
    IF              reduce using rule 31 (expr -> expr DOTADD expr .)
    LBRACE          reduce using rule 31 (expr -> expr DOTADD expr .)
    CONTINUE        reduce using rule 31 (expr -> expr DOTADD expr .)
    BREAK           reduce using rule 31 (expr -> expr DOTADD expr .)
    RETURN          reduce using rule 31 (expr -> expr DOTADD expr .)
    PRINT           reduce using rule 31 (expr -> expr DOTADD expr .)
    ID              reduce using rule 31 (expr -> expr DOTADD expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56


state 82

    (32) expr -> expr DIVIDE expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 32 (expr -> expr DIVIDE expr .)
    DOTDIV          reduce using rule 32 (expr -> expr DIVIDE expr .)
    DOTMUL          reduce using rule 32 (expr -> expr DIVIDE expr .)
    DOTSUB          reduce using rule 32 (expr -> expr DIVIDE expr .)
    DOTADD          reduce using rule 32 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 32 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 32 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 32 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 32 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 32 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 32 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 32 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 32 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 32 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 32 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 32 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 32 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 32 (expr -> expr DIVIDE expr .)
    RANGE           reduce using rule 32 (expr -> expr DIVIDE expr .)
    FOR             reduce using rule 32 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 32 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 32 (expr -> expr DIVIDE expr .)
    LBRACE          reduce using rule 32 (expr -> expr DIVIDE expr .)
    CONTINUE        reduce using rule 32 (expr -> expr DIVIDE expr .)
    BREAK           reduce using rule 32 (expr -> expr DIVIDE expr .)
    RETURN          reduce using rule 32 (expr -> expr DIVIDE expr .)
    PRINT           reduce using rule 32 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 32 (expr -> expr DIVIDE expr .)
    TRANSPOSE       shift and go to state 50


state 83

    (33) expr -> expr TIMES expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 33 (expr -> expr TIMES expr .)
    DOTDIV          reduce using rule 33 (expr -> expr TIMES expr .)
    DOTMUL          reduce using rule 33 (expr -> expr TIMES expr .)
    DOTSUB          reduce using rule 33 (expr -> expr TIMES expr .)
    DOTADD          reduce using rule 33 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 33 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 33 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 33 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 33 (expr -> expr TIMES expr .)
    GTE             reduce using rule 33 (expr -> expr TIMES expr .)
    LTE             reduce using rule 33 (expr -> expr TIMES expr .)
    GT              reduce using rule 33 (expr -> expr TIMES expr .)
    LT              reduce using rule 33 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 33 (expr -> expr TIMES expr .)
    EQ              reduce using rule 33 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 33 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 33 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 33 (expr -> expr TIMES expr .)
    RANGE           reduce using rule 33 (expr -> expr TIMES expr .)
    FOR             reduce using rule 33 (expr -> expr TIMES expr .)
    WHILE           reduce using rule 33 (expr -> expr TIMES expr .)
    IF              reduce using rule 33 (expr -> expr TIMES expr .)
    LBRACE          reduce using rule 33 (expr -> expr TIMES expr .)
    CONTINUE        reduce using rule 33 (expr -> expr TIMES expr .)
    BREAK           reduce using rule 33 (expr -> expr TIMES expr .)
    RETURN          reduce using rule 33 (expr -> expr TIMES expr .)
    PRINT           reduce using rule 33 (expr -> expr TIMES expr .)
    ID              reduce using rule 33 (expr -> expr TIMES expr .)
    TRANSPOSE       shift and go to state 50


state 84

    (34) expr -> expr MINUS expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 34 (expr -> expr MINUS expr .)
    DOTSUB          reduce using rule 34 (expr -> expr MINUS expr .)
    DOTADD          reduce using rule 34 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 34 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 34 (expr -> expr MINUS expr .)
    GTE             reduce using rule 34 (expr -> expr MINUS expr .)
    LTE             reduce using rule 34 (expr -> expr MINUS expr .)
    GT              reduce using rule 34 (expr -> expr MINUS expr .)
    LT              reduce using rule 34 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 34 (expr -> expr MINUS expr .)
    EQ              reduce using rule 34 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 34 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 34 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 34 (expr -> expr MINUS expr .)
    RANGE           reduce using rule 34 (expr -> expr MINUS expr .)
    FOR             reduce using rule 34 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 34 (expr -> expr MINUS expr .)
    IF              reduce using rule 34 (expr -> expr MINUS expr .)
    LBRACE          reduce using rule 34 (expr -> expr MINUS expr .)
    CONTINUE        reduce using rule 34 (expr -> expr MINUS expr .)
    BREAK           reduce using rule 34 (expr -> expr MINUS expr .)
    RETURN          reduce using rule 34 (expr -> expr MINUS expr .)
    PRINT           reduce using rule 34 (expr -> expr MINUS expr .)
    ID              reduce using rule 34 (expr -> expr MINUS expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56


state 85

    (35) expr -> expr PLUS expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 35 (expr -> expr PLUS expr .)
    DOTSUB          reduce using rule 35 (expr -> expr PLUS expr .)
    DOTADD          reduce using rule 35 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 35 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 35 (expr -> expr PLUS expr .)
    GTE             reduce using rule 35 (expr -> expr PLUS expr .)
    LTE             reduce using rule 35 (expr -> expr PLUS expr .)
    GT              reduce using rule 35 (expr -> expr PLUS expr .)
    LT              reduce using rule 35 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 35 (expr -> expr PLUS expr .)
    EQ              reduce using rule 35 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 35 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 35 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 35 (expr -> expr PLUS expr .)
    RANGE           reduce using rule 35 (expr -> expr PLUS expr .)
    FOR             reduce using rule 35 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 35 (expr -> expr PLUS expr .)
    IF              reduce using rule 35 (expr -> expr PLUS expr .)
    LBRACE          reduce using rule 35 (expr -> expr PLUS expr .)
    CONTINUE        reduce using rule 35 (expr -> expr PLUS expr .)
    BREAK           reduce using rule 35 (expr -> expr PLUS expr .)
    RETURN          reduce using rule 35 (expr -> expr PLUS expr .)
    PRINT           reduce using rule 35 (expr -> expr PLUS expr .)
    ID              reduce using rule 35 (expr -> expr PLUS expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56


state 86

    (36) expr -> expr GTE expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 36 (expr -> expr GTE expr .)
    GTE             reduce using rule 36 (expr -> expr GTE expr .)
    LTE             reduce using rule 36 (expr -> expr GTE expr .)
    GT              reduce using rule 36 (expr -> expr GTE expr .)
    LT              reduce using rule 36 (expr -> expr GTE expr .)
    NEQ             reduce using rule 36 (expr -> expr GTE expr .)
    EQ              reduce using rule 36 (expr -> expr GTE expr .)
    COMMA           reduce using rule 36 (expr -> expr GTE expr .)
    RBRACKET        reduce using rule 36 (expr -> expr GTE expr .)
    RPAREN          reduce using rule 36 (expr -> expr GTE expr .)
    RANGE           reduce using rule 36 (expr -> expr GTE expr .)
    FOR             reduce using rule 36 (expr -> expr GTE expr .)
    WHILE           reduce using rule 36 (expr -> expr GTE expr .)
    IF              reduce using rule 36 (expr -> expr GTE expr .)
    LBRACE          reduce using rule 36 (expr -> expr GTE expr .)
    CONTINUE        reduce using rule 36 (expr -> expr GTE expr .)
    BREAK           reduce using rule 36 (expr -> expr GTE expr .)
    RETURN          reduce using rule 36 (expr -> expr GTE expr .)
    PRINT           reduce using rule 36 (expr -> expr GTE expr .)
    ID              reduce using rule 36 (expr -> expr GTE expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58


state 87

    (37) expr -> expr LTE expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 37 (expr -> expr LTE expr .)
    GTE             reduce using rule 37 (expr -> expr LTE expr .)
    LTE             reduce using rule 37 (expr -> expr LTE expr .)
    GT              reduce using rule 37 (expr -> expr LTE expr .)
    LT              reduce using rule 37 (expr -> expr LTE expr .)
    NEQ             reduce using rule 37 (expr -> expr LTE expr .)
    EQ              reduce using rule 37 (expr -> expr LTE expr .)
    COMMA           reduce using rule 37 (expr -> expr LTE expr .)
    RBRACKET        reduce using rule 37 (expr -> expr LTE expr .)
    RPAREN          reduce using rule 37 (expr -> expr LTE expr .)
    RANGE           reduce using rule 37 (expr -> expr LTE expr .)
    FOR             reduce using rule 37 (expr -> expr LTE expr .)
    WHILE           reduce using rule 37 (expr -> expr LTE expr .)
    IF              reduce using rule 37 (expr -> expr LTE expr .)
    LBRACE          reduce using rule 37 (expr -> expr LTE expr .)
    CONTINUE        reduce using rule 37 (expr -> expr LTE expr .)
    BREAK           reduce using rule 37 (expr -> expr LTE expr .)
    RETURN          reduce using rule 37 (expr -> expr LTE expr .)
    PRINT           reduce using rule 37 (expr -> expr LTE expr .)
    ID              reduce using rule 37 (expr -> expr LTE expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58


state 88

    (38) expr -> expr GT expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 38 (expr -> expr GT expr .)
    GTE             reduce using rule 38 (expr -> expr GT expr .)
    LTE             reduce using rule 38 (expr -> expr GT expr .)
    GT              reduce using rule 38 (expr -> expr GT expr .)
    LT              reduce using rule 38 (expr -> expr GT expr .)
    NEQ             reduce using rule 38 (expr -> expr GT expr .)
    EQ              reduce using rule 38 (expr -> expr GT expr .)
    COMMA           reduce using rule 38 (expr -> expr GT expr .)
    RBRACKET        reduce using rule 38 (expr -> expr GT expr .)
    RPAREN          reduce using rule 38 (expr -> expr GT expr .)
    RANGE           reduce using rule 38 (expr -> expr GT expr .)
    FOR             reduce using rule 38 (expr -> expr GT expr .)
    WHILE           reduce using rule 38 (expr -> expr GT expr .)
    IF              reduce using rule 38 (expr -> expr GT expr .)
    LBRACE          reduce using rule 38 (expr -> expr GT expr .)
    CONTINUE        reduce using rule 38 (expr -> expr GT expr .)
    BREAK           reduce using rule 38 (expr -> expr GT expr .)
    RETURN          reduce using rule 38 (expr -> expr GT expr .)
    PRINT           reduce using rule 38 (expr -> expr GT expr .)
    ID              reduce using rule 38 (expr -> expr GT expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58


state 89

    (39) expr -> expr LT expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 39 (expr -> expr LT expr .)
    GTE             reduce using rule 39 (expr -> expr LT expr .)
    LTE             reduce using rule 39 (expr -> expr LT expr .)
    GT              reduce using rule 39 (expr -> expr LT expr .)
    LT              reduce using rule 39 (expr -> expr LT expr .)
    NEQ             reduce using rule 39 (expr -> expr LT expr .)
    EQ              reduce using rule 39 (expr -> expr LT expr .)
    COMMA           reduce using rule 39 (expr -> expr LT expr .)
    RBRACKET        reduce using rule 39 (expr -> expr LT expr .)
    RPAREN          reduce using rule 39 (expr -> expr LT expr .)
    RANGE           reduce using rule 39 (expr -> expr LT expr .)
    FOR             reduce using rule 39 (expr -> expr LT expr .)
    WHILE           reduce using rule 39 (expr -> expr LT expr .)
    IF              reduce using rule 39 (expr -> expr LT expr .)
    LBRACE          reduce using rule 39 (expr -> expr LT expr .)
    CONTINUE        reduce using rule 39 (expr -> expr LT expr .)
    BREAK           reduce using rule 39 (expr -> expr LT expr .)
    RETURN          reduce using rule 39 (expr -> expr LT expr .)
    PRINT           reduce using rule 39 (expr -> expr LT expr .)
    ID              reduce using rule 39 (expr -> expr LT expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58


state 90

    (40) expr -> expr NEQ expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 40 (expr -> expr NEQ expr .)
    NEQ             reduce using rule 40 (expr -> expr NEQ expr .)
    EQ              reduce using rule 40 (expr -> expr NEQ expr .)
    COMMA           reduce using rule 40 (expr -> expr NEQ expr .)
    RBRACKET        reduce using rule 40 (expr -> expr NEQ expr .)
    RPAREN          reduce using rule 40 (expr -> expr NEQ expr .)
    RANGE           reduce using rule 40 (expr -> expr NEQ expr .)
    FOR             reduce using rule 40 (expr -> expr NEQ expr .)
    WHILE           reduce using rule 40 (expr -> expr NEQ expr .)
    IF              reduce using rule 40 (expr -> expr NEQ expr .)
    LBRACE          reduce using rule 40 (expr -> expr NEQ expr .)
    CONTINUE        reduce using rule 40 (expr -> expr NEQ expr .)
    BREAK           reduce using rule 40 (expr -> expr NEQ expr .)
    RETURN          reduce using rule 40 (expr -> expr NEQ expr .)
    PRINT           reduce using rule 40 (expr -> expr NEQ expr .)
    ID              reduce using rule 40 (expr -> expr NEQ expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62


state 91

    (41) expr -> expr EQ expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 41 (expr -> expr EQ expr .)
    NEQ             reduce using rule 41 (expr -> expr EQ expr .)
    EQ              reduce using rule 41 (expr -> expr EQ expr .)
    COMMA           reduce using rule 41 (expr -> expr EQ expr .)
    RBRACKET        reduce using rule 41 (expr -> expr EQ expr .)
    RPAREN          reduce using rule 41 (expr -> expr EQ expr .)
    RANGE           reduce using rule 41 (expr -> expr EQ expr .)
    FOR             reduce using rule 41 (expr -> expr EQ expr .)
    WHILE           reduce using rule 41 (expr -> expr EQ expr .)
    IF              reduce using rule 41 (expr -> expr EQ expr .)
    LBRACE          reduce using rule 41 (expr -> expr EQ expr .)
    CONTINUE        reduce using rule 41 (expr -> expr EQ expr .)
    BREAK           reduce using rule 41 (expr -> expr EQ expr .)
    RETURN          reduce using rule 41 (expr -> expr EQ expr .)
    PRINT           reduce using rule 41 (expr -> expr EQ expr .)
    ID              reduce using rule 41 (expr -> expr EQ expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62


state 92

    (20) expr -> ONES LPAREN elements . RPAREN
    RPAREN          shift and go to state 103


state 93

    (27) expr -> LPAREN expr RPAREN .
    LINE_END        reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    TRANSPOSE       reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    DOTDIV          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    DOTMUL          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    DOTSUB          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    DOTADD          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    RANGE           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    FOR             reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    IF              reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    LBRACE          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    CONTINUE        reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    BREAK           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    PRINT           reduce using rule 27 (expr -> LPAREN expr RPAREN .)
    ID              reduce using rule 27 (expr -> LPAREN expr RPAREN .)


state 94

    (21) expr -> ZEROS LPAREN elements . RPAREN
    RPAREN          shift and go to state 104


state 95

    (22) expr -> EYE LPAREN elements . RPAREN
    RPAREN          shift and go to state 105


state 96

    (42) expr -> ID LBRACKET elements . RBRACKET
    RBRACKET        shift and go to state 106


state 97

    (48) vector -> LBRACKET elements RBRACKET .
    LINE_END        reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    TRANSPOSE       reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    DOTDIV          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    DOTMUL          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    DOTSUB          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    DOTADD          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    TIMES           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    GTE             reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    LTE             reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    GT              reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    LT              reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    NEQ             reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    EQ              reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    RANGE           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    FOR             reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    WHILE           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    IF              reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    LBRACE          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    CONTINUE        reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    BREAK           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    RETURN          reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    PRINT           reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)
    ID              reduce using rule 48 (vector -> LBRACKET elements RBRACKET .)


state 98

    (50) elements -> expr COMMA elements .
    LINE_END        reduce using rule 50 (elements -> expr COMMA elements .)
    RBRACKET        reduce using rule 50 (elements -> expr COMMA elements .)
    RPAREN          reduce using rule 50 (elements -> expr COMMA elements .)


state 99

    (6) instruction -> FOR ID ASSIGN expr RANGE . expr instruction
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 107
    vector                         shift and go to state 30

state 100

    (15) assignment -> ID LBRACKET elements RBRACKET assign . expr
    (17) expr -> . expr TRANSPOSE
    (18) expr -> . vector
    (19) expr -> . MINUS expr
    (20) expr -> . ONES LPAREN elements RPAREN
    (21) expr -> . ZEROS LPAREN elements RPAREN
    (22) expr -> . EYE LPAREN elements RPAREN
    (23) expr -> . ID
    (24) expr -> . STRING
    (25) expr -> . FLOATNUM
    (26) expr -> . INTNUM
    (27) expr -> . LPAREN expr RPAREN
    (28) expr -> . expr DOTDIV expr
    (29) expr -> . expr DOTMUL expr
    (30) expr -> . expr DOTSUB expr
    (31) expr -> . expr DOTADD expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr TIMES expr
    (34) expr -> . expr MINUS expr
    (35) expr -> . expr PLUS expr
    (36) expr -> . expr GTE expr
    (37) expr -> . expr LTE expr
    (38) expr -> . expr GT expr
    (39) expr -> . expr LT expr
    (40) expr -> . expr NEQ expr
    (41) expr -> . expr EQ expr
    (42) expr -> . ID LBRACKET elements RBRACKET
    (48) vector -> . LBRACKET elements RBRACKET
    MINUS           shift and go to state 31
    ONES            shift and go to state 32
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ID              shift and go to state 36
    STRING          shift and go to state 37
    FLOATNUM        shift and go to state 38
    INTNUM          shift and go to state 39
    LPAREN          shift and go to state 33
    LBRACKET        shift and go to state 40

    expr                           shift and go to state 108
    vector                         shift and go to state 30

state 101

    (7) instruction -> WHILE LPAREN expr RPAREN instruction .
    FOR             reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    WHILE           reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    IF              reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    LBRACE          reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    CONTINUE        reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    BREAK           reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    RETURN          reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    PRINT           reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    ID              reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    $end            reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    RBRACE          reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    ELSE            reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)


state 102

    (8) instruction -> IF LPAREN expr RPAREN instruction . ELSE instruction
    (9) instruction -> IF LPAREN expr RPAREN instruction .
    ELSE            shift and go to state 109
    FOR             reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    WHILE           reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    IF              reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    LBRACE          reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    CONTINUE        reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    BREAK           reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    RETURN          reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    PRINT           reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    ID              reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    $end            reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    RBRACE          reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)


state 103

    (20) expr -> ONES LPAREN elements RPAREN .
    LINE_END        reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    TRANSPOSE       reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    DOTDIV          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    DOTMUL          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    DOTSUB          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    DOTADD          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    TIMES           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    MINUS           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    PLUS            reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    GTE             reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    LTE             reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    GT              reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    LT              reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    NEQ             reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    EQ              reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    COMMA           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    RPAREN          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    RANGE           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    FOR             reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    WHILE           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    IF              reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    LBRACE          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    CONTINUE        reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    BREAK           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    RETURN          reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    PRINT           reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)
    ID              reduce using rule 20 (expr -> ONES LPAREN elements RPAREN .)


state 104

    (21) expr -> ZEROS LPAREN elements RPAREN .
    LINE_END        reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    TRANSPOSE       reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTDIV          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTMUL          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTSUB          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTADD          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    TIMES           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    MINUS           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    PLUS            reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    GTE             reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    LTE             reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    GT              reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    LT              reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    NEQ             reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    EQ              reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    COMMA           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    RPAREN          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    RANGE           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    FOR             reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    WHILE           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    IF              reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    LBRACE          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    CONTINUE        reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    BREAK           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    RETURN          reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    PRINT           reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)
    ID              reduce using rule 21 (expr -> ZEROS LPAREN elements RPAREN .)


state 105

    (22) expr -> EYE LPAREN elements RPAREN .
    LINE_END        reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    TRANSPOSE       reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    DOTDIV          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    DOTMUL          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    DOTSUB          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    DOTADD          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    TIMES           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    MINUS           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    PLUS            reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    GTE             reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    LTE             reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    GT              reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    LT              reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    NEQ             reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    EQ              reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    COMMA           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    RPAREN          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    RANGE           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    FOR             reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    WHILE           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    IF              reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    LBRACE          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    CONTINUE        reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    BREAK           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    RETURN          reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    PRINT           reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)
    ID              reduce using rule 22 (expr -> EYE LPAREN elements RPAREN .)


state 106

    (42) expr -> ID LBRACKET elements RBRACKET .
    LINE_END        reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    TRANSPOSE       reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    DOTDIV          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    DOTMUL          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    DOTSUB          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    DOTADD          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    TIMES           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    GTE             reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    LTE             reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    GT              reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    LT              reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    NEQ             reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    EQ              reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    RANGE           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    FOR             reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    WHILE           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    IF              reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    LBRACE          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    CONTINUE        reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    BREAK           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    RETURN          reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    PRINT           reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)
    ID              reduce using rule 42 (expr -> ID LBRACKET elements RBRACKET .)


state 107

    (6) instruction -> FOR ID ASSIGN expr RANGE expr . instruction
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 110
    assignment                     shift and go to state 4

state 108

    (15) assignment -> ID LBRACKET elements RBRACKET assign expr .
    (17) expr -> expr . TRANSPOSE
    (28) expr -> expr . DOTDIV expr
    (29) expr -> expr . DOTMUL expr
    (30) expr -> expr . DOTSUB expr
    (31) expr -> expr . DOTADD expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . TIMES expr
    (34) expr -> expr . MINUS expr
    (35) expr -> expr . PLUS expr
    (36) expr -> expr . GTE expr
    (37) expr -> expr . LTE expr
    (38) expr -> expr . GT expr
    (39) expr -> expr . LT expr
    (40) expr -> expr . NEQ expr
    (41) expr -> expr . EQ expr
    LINE_END        reduce using rule 15 (assignment -> ID LBRACKET elements RBRACKET assign expr .)
    TRANSPOSE       shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    DIVIDE          shift and go to state 55
    TIMES           shift and go to state 56
    MINUS           shift and go to state 57
    PLUS            shift and go to state 58
    GTE             shift and go to state 59
    LTE             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    NEQ             shift and go to state 63
    EQ              shift and go to state 64


state 109

    (8) instruction -> IF LPAREN expr RPAREN instruction ELSE . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr RANGE expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET elements RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 111
    assignment                     shift and go to state 4

state 110

    (6) instruction -> FOR ID ASSIGN expr RANGE expr instruction .
    FOR             reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    WHILE           reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    IF              reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    LBRACE          reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    CONTINUE        reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    BREAK           reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    RETURN          reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    PRINT           reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    ID              reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    $end            reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    RBRACE          reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)
    ELSE            reduce using rule 6 (instruction -> FOR ID ASSIGN expr RANGE expr instruction .)


state 111

    (8) instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .
    FOR             reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    IF              reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    LBRACE          reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    CONTINUE        reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    BREAK           reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    ID              reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    $end            reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    RBRACE          reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
