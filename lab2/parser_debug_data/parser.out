Grammar:

Rule 0     S' -> instructions_opt
Rule 1     instructions_opt -> <empty>
Rule 2     instructions_opt -> instructions
Rule 3     instructions -> instruction
Rule 4     instructions -> instructions instruction
Rule 5     instruction -> assignment LINE_END
Rule 6     instruction -> FOR ID ASSIGN expr COLON expr instruction  [precedence=left, level=9]
Rule 7     instruction -> WHILE LPAREN expr RPAREN instruction
Rule 8     instruction -> IF LPAREN expr RPAREN instruction ELSE instruction  [precedence=nonassoc, level=2]
Rule 9     instruction -> IF LPAREN expr RPAREN instruction  [precedence=nonassoc, level=1]
Rule 10    instruction -> LBRACE instructions RBRACE
Rule 11    instruction -> CONTINUE LINE_END
Rule 12    instruction -> BREAK LINE_END
Rule 13    instruction -> RETURN expr LINE_END
Rule 14    instruction -> PRINT elements LINE_END
Rule 15    assignment -> ID LBRACKET indexes RBRACKET assign expr
Rule 16    assignment -> ID assign expr
Rule 17    assign -> DIVASSIGN
Rule 18    assign -> MULASSIGN
Rule 19    assign -> SUBASSIGN
Rule 20    assign -> ADDASSIGN
Rule 21    assign -> ASSIGN
Rule 22    expr -> expr COLON expr  [precedence=left, level=9]
Rule 23    expr -> ID LBRACKET indexes RBRACKET
Rule 24    expr -> matrix
Rule 25    expr -> expr TRANSPOSE  [precedence=left, level=8]
Rule 26    expr -> MINUS expr  [precedence=right, level=7]
Rule 27    expr -> ONES LPAREN elements RPAREN
Rule 28    expr -> ZEROS LPAREN elements RPAREN
Rule 29    expr -> EYE LPAREN elements RPAREN
Rule 30    expr -> ID
Rule 31    expr -> STRING
Rule 32    expr -> FLOATNUM
Rule 33    expr -> INTNUM
Rule 34    expr -> LPAREN expr RPAREN
Rule 35    expr -> expr DOTDIV expr  [precedence=left, level=6]
Rule 36    expr -> expr DOTMUL expr  [precedence=left, level=6]
Rule 37    expr -> expr DOTSUB expr  [precedence=left, level=5]
Rule 38    expr -> expr DOTADD expr  [precedence=left, level=5]
Rule 39    expr -> expr DIVIDE expr  [precedence=left, level=6]
Rule 40    expr -> expr TIMES expr  [precedence=left, level=6]
Rule 41    expr -> expr MINUS expr  [precedence=left, level=5]
Rule 42    expr -> expr PLUS expr  [precedence=left, level=5]
Rule 43    expr -> expr GTE expr  [precedence=nonassoc, level=4]
Rule 44    expr -> expr LTE expr  [precedence=nonassoc, level=4]
Rule 45    expr -> expr GT expr  [precedence=nonassoc, level=4]
Rule 46    expr -> expr LT expr  [precedence=nonassoc, level=4]
Rule 47    expr -> expr NEQ expr  [precedence=nonassoc, level=3]
Rule 48    expr -> expr EQ expr  [precedence=nonassoc, level=3]
Rule 49    matrix -> LBRACKET elements RBRACKET
Rule 50    elements -> expr
Rule 51    elements -> expr COMMA elements
Rule 52    indexes -> expr
Rule 53    indexes -> indexes RBRACKET LBRACKET expr
Rule 54    indexes -> indexes COMMA expr

Terminals, with rules where they appear:

ADDASSIGN            : 20
ASSIGN               : 6 21
BREAK                : 12
COLON                : 6 22
COMMA                : 51 54
CONTINUE             : 11
DIVASSIGN            : 17
DIVIDE               : 39
DOTADD               : 38
DOTDIV               : 35
DOTMUL               : 36
DOTSUB               : 37
ELSE                 : 8
EQ                   : 48
EYE                  : 29
FLOATNUM             : 32
FOR                  : 6
GT                   : 45
GTE                  : 43
ID                   : 6 15 16 23 30
IF                   : 8 9
INTNUM               : 33
LBRACE               : 10
LBRACKET             : 15 23 49 53
LINE_END             : 5 11 12 13 14
LPAREN               : 7 8 9 27 28 29 34
LT                   : 46
LTE                  : 44
MINUS                : 26 41
MULASSIGN            : 18
NEQ                  : 47
ONES                 : 27
PLUS                 : 42
PRINT                : 14
RBRACE               : 10
RBRACKET             : 15 23 49 53
RETURN               : 13
RPAREN               : 7 8 9 27 28 29 34
STRING               : 31
SUBASSIGN            : 19
TIMES                : 40
TRANSPOSE            : 25
WHILE                : 7
ZEROS                : 28
error                : 

Nonterminals, with rules where they appear:

assign               : 15 16
assignment           : 5
elements             : 14 27 28 29 49 51
expr                 : 6 6 7 8 9 13 15 16 22 22 25 26 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 50 51 52 53 54
indexes              : 15 23 53 54
instruction          : 3 4 6 7 8 8 9
instructions         : 2 4 10
instructions_opt     : 0
matrix               : 24


state 0

    (0) S' -> . instructions_opt
    (1) instructions_opt -> .
    (2) instructions_opt -> . instructions
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    $end            reduce using rule 1 (instructions_opt -> .)
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instructions_opt               shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4

state 1

    (0) S' -> instructions_opt .


state 2

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    $end            reduce using rule 2 (instructions_opt -> instructions .)
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 14
    assignment                     shift and go to state 4

state 3

    (3) instructions -> instruction .
    FOR             reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    LBRACE          reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    RBRACE          reduce using rule 3 (instructions -> instruction .)


state 4

    (5) instruction -> assignment . LINE_END
    LINE_END        shift and go to state 15


state 5

    (6) instruction -> FOR . ID ASSIGN expr COLON expr instruction
    ID              shift and go to state 16


state 6

    (15) assignment -> ID . LBRACKET indexes RBRACKET assign expr
    (16) assignment -> ID . assign expr
    (17) assign -> . DIVASSIGN
    (18) assign -> . MULASSIGN
    (19) assign -> . SUBASSIGN
    (20) assign -> . ADDASSIGN
    (21) assign -> . ASSIGN
    LBRACKET        shift and go to state 17
    DIVASSIGN       shift and go to state 19
    MULASSIGN       shift and go to state 20
    SUBASSIGN       shift and go to state 21
    ADDASSIGN       shift and go to state 22
    ASSIGN          shift and go to state 23

    assign                         shift and go to state 18

state 7

    (7) instruction -> WHILE . LPAREN expr RPAREN instruction
    LPAREN          shift and go to state 24


state 8

    (8) instruction -> IF . LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> IF . LPAREN expr RPAREN instruction
    LPAREN          shift and go to state 25


state 9

    (10) instruction -> LBRACE . instructions RBRACE
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instructions                   shift and go to state 26
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4

state 10

    (11) instruction -> CONTINUE . LINE_END
    LINE_END        shift and go to state 27


state 11

    (12) instruction -> BREAK . LINE_END
    LINE_END        shift and go to state 28


state 12

    (13) instruction -> RETURN . expr LINE_END
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 29
    matrix                         shift and go to state 32

state 13

    (14) instruction -> PRINT . elements LINE_END
    (50) elements -> . expr
    (51) elements -> . expr COMMA elements
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    elements                       shift and go to state 41
    expr                           shift and go to state 42
    matrix                         shift and go to state 32

state 14

    (4) instructions -> instructions instruction .
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    LBRACE          reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    RBRACE          reduce using rule 4 (instructions -> instructions instruction .)


state 15

    (5) instruction -> assignment LINE_END .
    FOR             reduce using rule 5 (instruction -> assignment LINE_END .)
    WHILE           reduce using rule 5 (instruction -> assignment LINE_END .)
    IF              reduce using rule 5 (instruction -> assignment LINE_END .)
    LBRACE          reduce using rule 5 (instruction -> assignment LINE_END .)
    CONTINUE        reduce using rule 5 (instruction -> assignment LINE_END .)
    BREAK           reduce using rule 5 (instruction -> assignment LINE_END .)
    RETURN          reduce using rule 5 (instruction -> assignment LINE_END .)
    PRINT           reduce using rule 5 (instruction -> assignment LINE_END .)
    ID              reduce using rule 5 (instruction -> assignment LINE_END .)
    $end            reduce using rule 5 (instruction -> assignment LINE_END .)
    RBRACE          reduce using rule 5 (instruction -> assignment LINE_END .)
    ELSE            reduce using rule 5 (instruction -> assignment LINE_END .)


state 16

    (6) instruction -> FOR ID . ASSIGN expr COLON expr instruction
    ASSIGN          shift and go to state 43


state 17

    (15) assignment -> ID LBRACKET . indexes RBRACKET assign expr
    (52) indexes -> . expr
    (53) indexes -> . indexes RBRACKET LBRACKET expr
    (54) indexes -> . indexes COMMA expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    indexes                        shift and go to state 44
    expr                           shift and go to state 45
    matrix                         shift and go to state 32

state 18

    (16) assignment -> ID assign . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 46
    matrix                         shift and go to state 32

state 19

    (17) assign -> DIVASSIGN .
    ID              reduce using rule 17 (assign -> DIVASSIGN .)
    MINUS           reduce using rule 17 (assign -> DIVASSIGN .)
    ONES            reduce using rule 17 (assign -> DIVASSIGN .)
    ZEROS           reduce using rule 17 (assign -> DIVASSIGN .)
    EYE             reduce using rule 17 (assign -> DIVASSIGN .)
    STRING          reduce using rule 17 (assign -> DIVASSIGN .)
    FLOATNUM        reduce using rule 17 (assign -> DIVASSIGN .)
    INTNUM          reduce using rule 17 (assign -> DIVASSIGN .)
    LPAREN          reduce using rule 17 (assign -> DIVASSIGN .)
    LBRACKET        reduce using rule 17 (assign -> DIVASSIGN .)


state 20

    (18) assign -> MULASSIGN .
    ID              reduce using rule 18 (assign -> MULASSIGN .)
    MINUS           reduce using rule 18 (assign -> MULASSIGN .)
    ONES            reduce using rule 18 (assign -> MULASSIGN .)
    ZEROS           reduce using rule 18 (assign -> MULASSIGN .)
    EYE             reduce using rule 18 (assign -> MULASSIGN .)
    STRING          reduce using rule 18 (assign -> MULASSIGN .)
    FLOATNUM        reduce using rule 18 (assign -> MULASSIGN .)
    INTNUM          reduce using rule 18 (assign -> MULASSIGN .)
    LPAREN          reduce using rule 18 (assign -> MULASSIGN .)
    LBRACKET        reduce using rule 18 (assign -> MULASSIGN .)


state 21

    (19) assign -> SUBASSIGN .
    ID              reduce using rule 19 (assign -> SUBASSIGN .)
    MINUS           reduce using rule 19 (assign -> SUBASSIGN .)
    ONES            reduce using rule 19 (assign -> SUBASSIGN .)
    ZEROS           reduce using rule 19 (assign -> SUBASSIGN .)
    EYE             reduce using rule 19 (assign -> SUBASSIGN .)
    STRING          reduce using rule 19 (assign -> SUBASSIGN .)
    FLOATNUM        reduce using rule 19 (assign -> SUBASSIGN .)
    INTNUM          reduce using rule 19 (assign -> SUBASSIGN .)
    LPAREN          reduce using rule 19 (assign -> SUBASSIGN .)
    LBRACKET        reduce using rule 19 (assign -> SUBASSIGN .)


state 22

    (20) assign -> ADDASSIGN .
    ID              reduce using rule 20 (assign -> ADDASSIGN .)
    MINUS           reduce using rule 20 (assign -> ADDASSIGN .)
    ONES            reduce using rule 20 (assign -> ADDASSIGN .)
    ZEROS           reduce using rule 20 (assign -> ADDASSIGN .)
    EYE             reduce using rule 20 (assign -> ADDASSIGN .)
    STRING          reduce using rule 20 (assign -> ADDASSIGN .)
    FLOATNUM        reduce using rule 20 (assign -> ADDASSIGN .)
    INTNUM          reduce using rule 20 (assign -> ADDASSIGN .)
    LPAREN          reduce using rule 20 (assign -> ADDASSIGN .)
    LBRACKET        reduce using rule 20 (assign -> ADDASSIGN .)


state 23

    (21) assign -> ASSIGN .
    ID              reduce using rule 21 (assign -> ASSIGN .)
    MINUS           reduce using rule 21 (assign -> ASSIGN .)
    ONES            reduce using rule 21 (assign -> ASSIGN .)
    ZEROS           reduce using rule 21 (assign -> ASSIGN .)
    EYE             reduce using rule 21 (assign -> ASSIGN .)
    STRING          reduce using rule 21 (assign -> ASSIGN .)
    FLOATNUM        reduce using rule 21 (assign -> ASSIGN .)
    INTNUM          reduce using rule 21 (assign -> ASSIGN .)
    LPAREN          reduce using rule 21 (assign -> ASSIGN .)
    LBRACKET        reduce using rule 21 (assign -> ASSIGN .)


state 24

    (7) instruction -> WHILE LPAREN . expr RPAREN instruction
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 47
    matrix                         shift and go to state 32

state 25

    (8) instruction -> IF LPAREN . expr RPAREN instruction ELSE instruction
    (9) instruction -> IF LPAREN . expr RPAREN instruction
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 48
    matrix                         shift and go to state 32

state 26

    (10) instruction -> LBRACE instructions . RBRACE
    (4) instructions -> instructions . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    RBRACE          shift and go to state 49
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 14
    assignment                     shift and go to state 4

state 27

    (11) instruction -> CONTINUE LINE_END .
    FOR             reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    WHILE           reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    IF              reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    LBRACE          reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    CONTINUE        reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    BREAK           reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    RETURN          reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    PRINT           reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    ID              reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    $end            reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    RBRACE          reduce using rule 11 (instruction -> CONTINUE LINE_END .)
    ELSE            reduce using rule 11 (instruction -> CONTINUE LINE_END .)


state 28

    (12) instruction -> BREAK LINE_END .
    FOR             reduce using rule 12 (instruction -> BREAK LINE_END .)
    WHILE           reduce using rule 12 (instruction -> BREAK LINE_END .)
    IF              reduce using rule 12 (instruction -> BREAK LINE_END .)
    LBRACE          reduce using rule 12 (instruction -> BREAK LINE_END .)
    CONTINUE        reduce using rule 12 (instruction -> BREAK LINE_END .)
    BREAK           reduce using rule 12 (instruction -> BREAK LINE_END .)
    RETURN          reduce using rule 12 (instruction -> BREAK LINE_END .)
    PRINT           reduce using rule 12 (instruction -> BREAK LINE_END .)
    ID              reduce using rule 12 (instruction -> BREAK LINE_END .)
    $end            reduce using rule 12 (instruction -> BREAK LINE_END .)
    RBRACE          reduce using rule 12 (instruction -> BREAK LINE_END .)
    ELSE            reduce using rule 12 (instruction -> BREAK LINE_END .)


state 29

    (13) instruction -> RETURN expr . LINE_END
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        shift and go to state 50
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 30

    (23) expr -> ID . LBRACKET indexes RBRACKET
    (30) expr -> ID .
    LBRACKET        shift and go to state 67
    LINE_END        reduce using rule 30 (expr -> ID .)
    COLON           reduce using rule 30 (expr -> ID .)
    TRANSPOSE       reduce using rule 30 (expr -> ID .)
    DOTDIV          reduce using rule 30 (expr -> ID .)
    DOTMUL          reduce using rule 30 (expr -> ID .)
    DOTSUB          reduce using rule 30 (expr -> ID .)
    DOTADD          reduce using rule 30 (expr -> ID .)
    DIVIDE          reduce using rule 30 (expr -> ID .)
    TIMES           reduce using rule 30 (expr -> ID .)
    MINUS           reduce using rule 30 (expr -> ID .)
    PLUS            reduce using rule 30 (expr -> ID .)
    GTE             reduce using rule 30 (expr -> ID .)
    LTE             reduce using rule 30 (expr -> ID .)
    GT              reduce using rule 30 (expr -> ID .)
    LT              reduce using rule 30 (expr -> ID .)
    NEQ             reduce using rule 30 (expr -> ID .)
    EQ              reduce using rule 30 (expr -> ID .)
    COMMA           reduce using rule 30 (expr -> ID .)
    RBRACKET        reduce using rule 30 (expr -> ID .)
    RPAREN          reduce using rule 30 (expr -> ID .)
    FOR             reduce using rule 30 (expr -> ID .)
    WHILE           reduce using rule 30 (expr -> ID .)
    IF              reduce using rule 30 (expr -> ID .)
    LBRACE          reduce using rule 30 (expr -> ID .)
    CONTINUE        reduce using rule 30 (expr -> ID .)
    BREAK           reduce using rule 30 (expr -> ID .)
    RETURN          reduce using rule 30 (expr -> ID .)
    PRINT           reduce using rule 30 (expr -> ID .)
    ID              reduce using rule 30 (expr -> ID .)


state 31

    (49) matrix -> LBRACKET . elements RBRACKET
    (50) elements -> . expr
    (51) elements -> . expr COMMA elements
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    elements                       shift and go to state 68
    expr                           shift and go to state 42
    matrix                         shift and go to state 32

state 32

    (24) expr -> matrix .
    LINE_END        reduce using rule 24 (expr -> matrix .)
    COLON           reduce using rule 24 (expr -> matrix .)
    TRANSPOSE       reduce using rule 24 (expr -> matrix .)
    DOTDIV          reduce using rule 24 (expr -> matrix .)
    DOTMUL          reduce using rule 24 (expr -> matrix .)
    DOTSUB          reduce using rule 24 (expr -> matrix .)
    DOTADD          reduce using rule 24 (expr -> matrix .)
    DIVIDE          reduce using rule 24 (expr -> matrix .)
    TIMES           reduce using rule 24 (expr -> matrix .)
    MINUS           reduce using rule 24 (expr -> matrix .)
    PLUS            reduce using rule 24 (expr -> matrix .)
    GTE             reduce using rule 24 (expr -> matrix .)
    LTE             reduce using rule 24 (expr -> matrix .)
    GT              reduce using rule 24 (expr -> matrix .)
    LT              reduce using rule 24 (expr -> matrix .)
    NEQ             reduce using rule 24 (expr -> matrix .)
    EQ              reduce using rule 24 (expr -> matrix .)
    COMMA           reduce using rule 24 (expr -> matrix .)
    RBRACKET        reduce using rule 24 (expr -> matrix .)
    RPAREN          reduce using rule 24 (expr -> matrix .)
    FOR             reduce using rule 24 (expr -> matrix .)
    WHILE           reduce using rule 24 (expr -> matrix .)
    IF              reduce using rule 24 (expr -> matrix .)
    LBRACE          reduce using rule 24 (expr -> matrix .)
    CONTINUE        reduce using rule 24 (expr -> matrix .)
    BREAK           reduce using rule 24 (expr -> matrix .)
    RETURN          reduce using rule 24 (expr -> matrix .)
    PRINT           reduce using rule 24 (expr -> matrix .)
    ID              reduce using rule 24 (expr -> matrix .)


state 33

    (26) expr -> MINUS . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 69
    matrix                         shift and go to state 32

state 34

    (27) expr -> ONES . LPAREN elements RPAREN
    LPAREN          shift and go to state 70


state 35

    (34) expr -> LPAREN . expr RPAREN
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 71
    matrix                         shift and go to state 32

state 36

    (28) expr -> ZEROS . LPAREN elements RPAREN
    LPAREN          shift and go to state 72


state 37

    (29) expr -> EYE . LPAREN elements RPAREN
    LPAREN          shift and go to state 73


state 38

    (31) expr -> STRING .
    LINE_END        reduce using rule 31 (expr -> STRING .)
    COLON           reduce using rule 31 (expr -> STRING .)
    TRANSPOSE       reduce using rule 31 (expr -> STRING .)
    DOTDIV          reduce using rule 31 (expr -> STRING .)
    DOTMUL          reduce using rule 31 (expr -> STRING .)
    DOTSUB          reduce using rule 31 (expr -> STRING .)
    DOTADD          reduce using rule 31 (expr -> STRING .)
    DIVIDE          reduce using rule 31 (expr -> STRING .)
    TIMES           reduce using rule 31 (expr -> STRING .)
    MINUS           reduce using rule 31 (expr -> STRING .)
    PLUS            reduce using rule 31 (expr -> STRING .)
    GTE             reduce using rule 31 (expr -> STRING .)
    LTE             reduce using rule 31 (expr -> STRING .)
    GT              reduce using rule 31 (expr -> STRING .)
    LT              reduce using rule 31 (expr -> STRING .)
    NEQ             reduce using rule 31 (expr -> STRING .)
    EQ              reduce using rule 31 (expr -> STRING .)
    COMMA           reduce using rule 31 (expr -> STRING .)
    RBRACKET        reduce using rule 31 (expr -> STRING .)
    RPAREN          reduce using rule 31 (expr -> STRING .)
    FOR             reduce using rule 31 (expr -> STRING .)
    WHILE           reduce using rule 31 (expr -> STRING .)
    IF              reduce using rule 31 (expr -> STRING .)
    LBRACE          reduce using rule 31 (expr -> STRING .)
    CONTINUE        reduce using rule 31 (expr -> STRING .)
    BREAK           reduce using rule 31 (expr -> STRING .)
    RETURN          reduce using rule 31 (expr -> STRING .)
    PRINT           reduce using rule 31 (expr -> STRING .)
    ID              reduce using rule 31 (expr -> STRING .)


state 39

    (32) expr -> FLOATNUM .
    LINE_END        reduce using rule 32 (expr -> FLOATNUM .)
    COLON           reduce using rule 32 (expr -> FLOATNUM .)
    TRANSPOSE       reduce using rule 32 (expr -> FLOATNUM .)
    DOTDIV          reduce using rule 32 (expr -> FLOATNUM .)
    DOTMUL          reduce using rule 32 (expr -> FLOATNUM .)
    DOTSUB          reduce using rule 32 (expr -> FLOATNUM .)
    DOTADD          reduce using rule 32 (expr -> FLOATNUM .)
    DIVIDE          reduce using rule 32 (expr -> FLOATNUM .)
    TIMES           reduce using rule 32 (expr -> FLOATNUM .)
    MINUS           reduce using rule 32 (expr -> FLOATNUM .)
    PLUS            reduce using rule 32 (expr -> FLOATNUM .)
    GTE             reduce using rule 32 (expr -> FLOATNUM .)
    LTE             reduce using rule 32 (expr -> FLOATNUM .)
    GT              reduce using rule 32 (expr -> FLOATNUM .)
    LT              reduce using rule 32 (expr -> FLOATNUM .)
    NEQ             reduce using rule 32 (expr -> FLOATNUM .)
    EQ              reduce using rule 32 (expr -> FLOATNUM .)
    COMMA           reduce using rule 32 (expr -> FLOATNUM .)
    RBRACKET        reduce using rule 32 (expr -> FLOATNUM .)
    RPAREN          reduce using rule 32 (expr -> FLOATNUM .)
    FOR             reduce using rule 32 (expr -> FLOATNUM .)
    WHILE           reduce using rule 32 (expr -> FLOATNUM .)
    IF              reduce using rule 32 (expr -> FLOATNUM .)
    LBRACE          reduce using rule 32 (expr -> FLOATNUM .)
    CONTINUE        reduce using rule 32 (expr -> FLOATNUM .)
    BREAK           reduce using rule 32 (expr -> FLOATNUM .)
    RETURN          reduce using rule 32 (expr -> FLOATNUM .)
    PRINT           reduce using rule 32 (expr -> FLOATNUM .)
    ID              reduce using rule 32 (expr -> FLOATNUM .)


state 40

    (33) expr -> INTNUM .
    LINE_END        reduce using rule 33 (expr -> INTNUM .)
    COLON           reduce using rule 33 (expr -> INTNUM .)
    TRANSPOSE       reduce using rule 33 (expr -> INTNUM .)
    DOTDIV          reduce using rule 33 (expr -> INTNUM .)
    DOTMUL          reduce using rule 33 (expr -> INTNUM .)
    DOTSUB          reduce using rule 33 (expr -> INTNUM .)
    DOTADD          reduce using rule 33 (expr -> INTNUM .)
    DIVIDE          reduce using rule 33 (expr -> INTNUM .)
    TIMES           reduce using rule 33 (expr -> INTNUM .)
    MINUS           reduce using rule 33 (expr -> INTNUM .)
    PLUS            reduce using rule 33 (expr -> INTNUM .)
    GTE             reduce using rule 33 (expr -> INTNUM .)
    LTE             reduce using rule 33 (expr -> INTNUM .)
    GT              reduce using rule 33 (expr -> INTNUM .)
    LT              reduce using rule 33 (expr -> INTNUM .)
    NEQ             reduce using rule 33 (expr -> INTNUM .)
    EQ              reduce using rule 33 (expr -> INTNUM .)
    COMMA           reduce using rule 33 (expr -> INTNUM .)
    RBRACKET        reduce using rule 33 (expr -> INTNUM .)
    RPAREN          reduce using rule 33 (expr -> INTNUM .)
    FOR             reduce using rule 33 (expr -> INTNUM .)
    WHILE           reduce using rule 33 (expr -> INTNUM .)
    IF              reduce using rule 33 (expr -> INTNUM .)
    LBRACE          reduce using rule 33 (expr -> INTNUM .)
    CONTINUE        reduce using rule 33 (expr -> INTNUM .)
    BREAK           reduce using rule 33 (expr -> INTNUM .)
    RETURN          reduce using rule 33 (expr -> INTNUM .)
    PRINT           reduce using rule 33 (expr -> INTNUM .)
    ID              reduce using rule 33 (expr -> INTNUM .)


state 41

    (14) instruction -> PRINT elements . LINE_END
    LINE_END        shift and go to state 74


state 42

    (50) elements -> expr .
    (51) elements -> expr . COMMA elements
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 50 (elements -> expr .)
    RBRACKET        reduce using rule 50 (elements -> expr .)
    RPAREN          reduce using rule 50 (elements -> expr .)
    COMMA           shift and go to state 75
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 43

    (6) instruction -> FOR ID ASSIGN . expr COLON expr instruction
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 76
    matrix                         shift and go to state 32

state 44

    (15) assignment -> ID LBRACKET indexes . RBRACKET assign expr
    (53) indexes -> indexes . RBRACKET LBRACKET expr
    (54) indexes -> indexes . COMMA expr
    RBRACKET        shift and go to state 77
    COMMA           shift and go to state 78


state 45

    (52) indexes -> expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    RBRACKET        reduce using rule 52 (indexes -> expr .)
    COMMA           reduce using rule 52 (indexes -> expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 46

    (16) assignment -> ID assign expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 16 (assignment -> ID assign expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 47

    (7) instruction -> WHILE LPAREN expr . RPAREN instruction
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    RPAREN          shift and go to state 79
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 48

    (8) instruction -> IF LPAREN expr . RPAREN instruction ELSE instruction
    (9) instruction -> IF LPAREN expr . RPAREN instruction
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    RPAREN          shift and go to state 80
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 49

    (10) instruction -> LBRACE instructions RBRACE .
    FOR             reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    WHILE           reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    IF              reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    LBRACE          reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    CONTINUE        reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    BREAK           reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    RETURN          reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    PRINT           reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    ID              reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    $end            reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    RBRACE          reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)
    ELSE            reduce using rule 10 (instruction -> LBRACE instructions RBRACE .)


state 50

    (13) instruction -> RETURN expr LINE_END .
    FOR             reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    WHILE           reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    IF              reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    LBRACE          reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    CONTINUE        reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    BREAK           reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    RETURN          reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    PRINT           reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    ID              reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    $end            reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    RBRACE          reduce using rule 13 (instruction -> RETURN expr LINE_END .)
    ELSE            reduce using rule 13 (instruction -> RETURN expr LINE_END .)


state 51

    (22) expr -> expr COLON . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 81
    matrix                         shift and go to state 32

state 52

    (25) expr -> expr TRANSPOSE .
    LINE_END        reduce using rule 25 (expr -> expr TRANSPOSE .)
    COLON           reduce using rule 25 (expr -> expr TRANSPOSE .)
    TRANSPOSE       reduce using rule 25 (expr -> expr TRANSPOSE .)
    DOTDIV          reduce using rule 25 (expr -> expr TRANSPOSE .)
    DOTMUL          reduce using rule 25 (expr -> expr TRANSPOSE .)
    DOTSUB          reduce using rule 25 (expr -> expr TRANSPOSE .)
    DOTADD          reduce using rule 25 (expr -> expr TRANSPOSE .)
    DIVIDE          reduce using rule 25 (expr -> expr TRANSPOSE .)
    TIMES           reduce using rule 25 (expr -> expr TRANSPOSE .)
    MINUS           reduce using rule 25 (expr -> expr TRANSPOSE .)
    PLUS            reduce using rule 25 (expr -> expr TRANSPOSE .)
    GTE             reduce using rule 25 (expr -> expr TRANSPOSE .)
    LTE             reduce using rule 25 (expr -> expr TRANSPOSE .)
    GT              reduce using rule 25 (expr -> expr TRANSPOSE .)
    LT              reduce using rule 25 (expr -> expr TRANSPOSE .)
    NEQ             reduce using rule 25 (expr -> expr TRANSPOSE .)
    EQ              reduce using rule 25 (expr -> expr TRANSPOSE .)
    COMMA           reduce using rule 25 (expr -> expr TRANSPOSE .)
    RBRACKET        reduce using rule 25 (expr -> expr TRANSPOSE .)
    RPAREN          reduce using rule 25 (expr -> expr TRANSPOSE .)
    FOR             reduce using rule 25 (expr -> expr TRANSPOSE .)
    WHILE           reduce using rule 25 (expr -> expr TRANSPOSE .)
    IF              reduce using rule 25 (expr -> expr TRANSPOSE .)
    LBRACE          reduce using rule 25 (expr -> expr TRANSPOSE .)
    CONTINUE        reduce using rule 25 (expr -> expr TRANSPOSE .)
    BREAK           reduce using rule 25 (expr -> expr TRANSPOSE .)
    RETURN          reduce using rule 25 (expr -> expr TRANSPOSE .)
    PRINT           reduce using rule 25 (expr -> expr TRANSPOSE .)
    ID              reduce using rule 25 (expr -> expr TRANSPOSE .)


state 53

    (35) expr -> expr DOTDIV . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 82
    matrix                         shift and go to state 32

state 54

    (36) expr -> expr DOTMUL . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 83
    matrix                         shift and go to state 32

state 55

    (37) expr -> expr DOTSUB . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 84
    matrix                         shift and go to state 32

state 56

    (38) expr -> expr DOTADD . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 85
    matrix                         shift and go to state 32

state 57

    (39) expr -> expr DIVIDE . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 86
    matrix                         shift and go to state 32

state 58

    (40) expr -> expr TIMES . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 87
    matrix                         shift and go to state 32

state 59

    (41) expr -> expr MINUS . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 88
    matrix                         shift and go to state 32

state 60

    (42) expr -> expr PLUS . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 89
    matrix                         shift and go to state 32

state 61

    (43) expr -> expr GTE . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 90
    matrix                         shift and go to state 32

state 62

    (44) expr -> expr LTE . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 91
    matrix                         shift and go to state 32

state 63

    (45) expr -> expr GT . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 92
    matrix                         shift and go to state 32

state 64

    (46) expr -> expr LT . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 93
    matrix                         shift and go to state 32

state 65

    (47) expr -> expr NEQ . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 94
    matrix                         shift and go to state 32

state 66

    (48) expr -> expr EQ . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 95
    matrix                         shift and go to state 32

state 67

    (23) expr -> ID LBRACKET . indexes RBRACKET
    (52) indexes -> . expr
    (53) indexes -> . indexes RBRACKET LBRACKET expr
    (54) indexes -> . indexes COMMA expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    indexes                        shift and go to state 96
    expr                           shift and go to state 45
    matrix                         shift and go to state 32

state 68

    (49) matrix -> LBRACKET elements . RBRACKET
    RBRACKET        shift and go to state 97


state 69

    (26) expr -> MINUS expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 26 (expr -> MINUS expr .)
    DOTDIV          reduce using rule 26 (expr -> MINUS expr .)
    DOTMUL          reduce using rule 26 (expr -> MINUS expr .)
    DOTSUB          reduce using rule 26 (expr -> MINUS expr .)
    DOTADD          reduce using rule 26 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 26 (expr -> MINUS expr .)
    TIMES           reduce using rule 26 (expr -> MINUS expr .)
    MINUS           reduce using rule 26 (expr -> MINUS expr .)
    PLUS            reduce using rule 26 (expr -> MINUS expr .)
    GTE             reduce using rule 26 (expr -> MINUS expr .)
    LTE             reduce using rule 26 (expr -> MINUS expr .)
    GT              reduce using rule 26 (expr -> MINUS expr .)
    LT              reduce using rule 26 (expr -> MINUS expr .)
    NEQ             reduce using rule 26 (expr -> MINUS expr .)
    EQ              reduce using rule 26 (expr -> MINUS expr .)
    COMMA           reduce using rule 26 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 26 (expr -> MINUS expr .)
    RPAREN          reduce using rule 26 (expr -> MINUS expr .)
    FOR             reduce using rule 26 (expr -> MINUS expr .)
    WHILE           reduce using rule 26 (expr -> MINUS expr .)
    IF              reduce using rule 26 (expr -> MINUS expr .)
    LBRACE          reduce using rule 26 (expr -> MINUS expr .)
    CONTINUE        reduce using rule 26 (expr -> MINUS expr .)
    BREAK           reduce using rule 26 (expr -> MINUS expr .)
    RETURN          reduce using rule 26 (expr -> MINUS expr .)
    PRINT           reduce using rule 26 (expr -> MINUS expr .)
    ID              reduce using rule 26 (expr -> MINUS expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52


state 70

    (27) expr -> ONES LPAREN . elements RPAREN
    (50) elements -> . expr
    (51) elements -> . expr COMMA elements
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    elements                       shift and go to state 98
    expr                           shift and go to state 42
    matrix                         shift and go to state 32

state 71

    (34) expr -> LPAREN expr . RPAREN
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    RPAREN          shift and go to state 99
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 72

    (28) expr -> ZEROS LPAREN . elements RPAREN
    (50) elements -> . expr
    (51) elements -> . expr COMMA elements
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    elements                       shift and go to state 100
    expr                           shift and go to state 42
    matrix                         shift and go to state 32

state 73

    (29) expr -> EYE LPAREN . elements RPAREN
    (50) elements -> . expr
    (51) elements -> . expr COMMA elements
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    elements                       shift and go to state 101
    expr                           shift and go to state 42
    matrix                         shift and go to state 32

state 74

    (14) instruction -> PRINT elements LINE_END .
    FOR             reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    WHILE           reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    IF              reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    LBRACE          reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    CONTINUE        reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    BREAK           reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    RETURN          reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    PRINT           reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    ID              reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    $end            reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    RBRACE          reduce using rule 14 (instruction -> PRINT elements LINE_END .)
    ELSE            reduce using rule 14 (instruction -> PRINT elements LINE_END .)


state 75

    (51) elements -> expr COMMA . elements
    (50) elements -> . expr
    (51) elements -> . expr COMMA elements
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 42
    elements                       shift and go to state 102
    matrix                         shift and go to state 32

state 76

    (6) instruction -> FOR ID ASSIGN expr . COLON expr instruction
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    COLON           shift and go to state 103
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 77

    (15) assignment -> ID LBRACKET indexes RBRACKET . assign expr
    (53) indexes -> indexes RBRACKET . LBRACKET expr
    (17) assign -> . DIVASSIGN
    (18) assign -> . MULASSIGN
    (19) assign -> . SUBASSIGN
    (20) assign -> . ADDASSIGN
    (21) assign -> . ASSIGN
    LBRACKET        shift and go to state 104
    DIVASSIGN       shift and go to state 19
    MULASSIGN       shift and go to state 20
    SUBASSIGN       shift and go to state 21
    ADDASSIGN       shift and go to state 22
    ASSIGN          shift and go to state 23

    assign                         shift and go to state 105

state 78

    (54) indexes -> indexes COMMA . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 106
    matrix                         shift and go to state 32

state 79

    (7) instruction -> WHILE LPAREN expr RPAREN . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 107
    assignment                     shift and go to state 4

state 80

    (8) instruction -> IF LPAREN expr RPAREN . instruction ELSE instruction
    (9) instruction -> IF LPAREN expr RPAREN . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 108
    assignment                     shift and go to state 4

state 81

    (22) expr -> expr COLON expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 22 (expr -> expr COLON expr .)
    COLON           reduce using rule 22 (expr -> expr COLON expr .)
    TRANSPOSE       reduce using rule 22 (expr -> expr COLON expr .)
    DOTDIV          reduce using rule 22 (expr -> expr COLON expr .)
    DOTMUL          reduce using rule 22 (expr -> expr COLON expr .)
    DOTSUB          reduce using rule 22 (expr -> expr COLON expr .)
    DOTADD          reduce using rule 22 (expr -> expr COLON expr .)
    DIVIDE          reduce using rule 22 (expr -> expr COLON expr .)
    TIMES           reduce using rule 22 (expr -> expr COLON expr .)
    MINUS           reduce using rule 22 (expr -> expr COLON expr .)
    PLUS            reduce using rule 22 (expr -> expr COLON expr .)
    GTE             reduce using rule 22 (expr -> expr COLON expr .)
    LTE             reduce using rule 22 (expr -> expr COLON expr .)
    GT              reduce using rule 22 (expr -> expr COLON expr .)
    LT              reduce using rule 22 (expr -> expr COLON expr .)
    NEQ             reduce using rule 22 (expr -> expr COLON expr .)
    EQ              reduce using rule 22 (expr -> expr COLON expr .)
    COMMA           reduce using rule 22 (expr -> expr COLON expr .)
    RBRACKET        reduce using rule 22 (expr -> expr COLON expr .)
    RPAREN          reduce using rule 22 (expr -> expr COLON expr .)
    FOR             reduce using rule 22 (expr -> expr COLON expr .)
    WHILE           reduce using rule 22 (expr -> expr COLON expr .)
    IF              reduce using rule 22 (expr -> expr COLON expr .)
    LBRACE          reduce using rule 22 (expr -> expr COLON expr .)
    CONTINUE        reduce using rule 22 (expr -> expr COLON expr .)
    BREAK           reduce using rule 22 (expr -> expr COLON expr .)
    RETURN          reduce using rule 22 (expr -> expr COLON expr .)
    PRINT           reduce using rule 22 (expr -> expr COLON expr .)
    ID              reduce using rule 22 (expr -> expr COLON expr .)


state 82

    (35) expr -> expr DOTDIV expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 35 (expr -> expr DOTDIV expr .)
    DOTDIV          reduce using rule 35 (expr -> expr DOTDIV expr .)
    DOTMUL          reduce using rule 35 (expr -> expr DOTDIV expr .)
    DOTSUB          reduce using rule 35 (expr -> expr DOTDIV expr .)
    DOTADD          reduce using rule 35 (expr -> expr DOTDIV expr .)
    DIVIDE          reduce using rule 35 (expr -> expr DOTDIV expr .)
    TIMES           reduce using rule 35 (expr -> expr DOTDIV expr .)
    MINUS           reduce using rule 35 (expr -> expr DOTDIV expr .)
    PLUS            reduce using rule 35 (expr -> expr DOTDIV expr .)
    GTE             reduce using rule 35 (expr -> expr DOTDIV expr .)
    LTE             reduce using rule 35 (expr -> expr DOTDIV expr .)
    GT              reduce using rule 35 (expr -> expr DOTDIV expr .)
    LT              reduce using rule 35 (expr -> expr DOTDIV expr .)
    NEQ             reduce using rule 35 (expr -> expr DOTDIV expr .)
    EQ              reduce using rule 35 (expr -> expr DOTDIV expr .)
    COMMA           reduce using rule 35 (expr -> expr DOTDIV expr .)
    RBRACKET        reduce using rule 35 (expr -> expr DOTDIV expr .)
    RPAREN          reduce using rule 35 (expr -> expr DOTDIV expr .)
    FOR             reduce using rule 35 (expr -> expr DOTDIV expr .)
    WHILE           reduce using rule 35 (expr -> expr DOTDIV expr .)
    IF              reduce using rule 35 (expr -> expr DOTDIV expr .)
    LBRACE          reduce using rule 35 (expr -> expr DOTDIV expr .)
    CONTINUE        reduce using rule 35 (expr -> expr DOTDIV expr .)
    BREAK           reduce using rule 35 (expr -> expr DOTDIV expr .)
    RETURN          reduce using rule 35 (expr -> expr DOTDIV expr .)
    PRINT           reduce using rule 35 (expr -> expr DOTDIV expr .)
    ID              reduce using rule 35 (expr -> expr DOTDIV expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52


state 83

    (36) expr -> expr DOTMUL expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 36 (expr -> expr DOTMUL expr .)
    DOTDIV          reduce using rule 36 (expr -> expr DOTMUL expr .)
    DOTMUL          reduce using rule 36 (expr -> expr DOTMUL expr .)
    DOTSUB          reduce using rule 36 (expr -> expr DOTMUL expr .)
    DOTADD          reduce using rule 36 (expr -> expr DOTMUL expr .)
    DIVIDE          reduce using rule 36 (expr -> expr DOTMUL expr .)
    TIMES           reduce using rule 36 (expr -> expr DOTMUL expr .)
    MINUS           reduce using rule 36 (expr -> expr DOTMUL expr .)
    PLUS            reduce using rule 36 (expr -> expr DOTMUL expr .)
    GTE             reduce using rule 36 (expr -> expr DOTMUL expr .)
    LTE             reduce using rule 36 (expr -> expr DOTMUL expr .)
    GT              reduce using rule 36 (expr -> expr DOTMUL expr .)
    LT              reduce using rule 36 (expr -> expr DOTMUL expr .)
    NEQ             reduce using rule 36 (expr -> expr DOTMUL expr .)
    EQ              reduce using rule 36 (expr -> expr DOTMUL expr .)
    COMMA           reduce using rule 36 (expr -> expr DOTMUL expr .)
    RBRACKET        reduce using rule 36 (expr -> expr DOTMUL expr .)
    RPAREN          reduce using rule 36 (expr -> expr DOTMUL expr .)
    FOR             reduce using rule 36 (expr -> expr DOTMUL expr .)
    WHILE           reduce using rule 36 (expr -> expr DOTMUL expr .)
    IF              reduce using rule 36 (expr -> expr DOTMUL expr .)
    LBRACE          reduce using rule 36 (expr -> expr DOTMUL expr .)
    CONTINUE        reduce using rule 36 (expr -> expr DOTMUL expr .)
    BREAK           reduce using rule 36 (expr -> expr DOTMUL expr .)
    RETURN          reduce using rule 36 (expr -> expr DOTMUL expr .)
    PRINT           reduce using rule 36 (expr -> expr DOTMUL expr .)
    ID              reduce using rule 36 (expr -> expr DOTMUL expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52


state 84

    (37) expr -> expr DOTSUB expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 37 (expr -> expr DOTSUB expr .)
    DOTSUB          reduce using rule 37 (expr -> expr DOTSUB expr .)
    DOTADD          reduce using rule 37 (expr -> expr DOTSUB expr .)
    MINUS           reduce using rule 37 (expr -> expr DOTSUB expr .)
    PLUS            reduce using rule 37 (expr -> expr DOTSUB expr .)
    GTE             reduce using rule 37 (expr -> expr DOTSUB expr .)
    LTE             reduce using rule 37 (expr -> expr DOTSUB expr .)
    GT              reduce using rule 37 (expr -> expr DOTSUB expr .)
    LT              reduce using rule 37 (expr -> expr DOTSUB expr .)
    NEQ             reduce using rule 37 (expr -> expr DOTSUB expr .)
    EQ              reduce using rule 37 (expr -> expr DOTSUB expr .)
    COMMA           reduce using rule 37 (expr -> expr DOTSUB expr .)
    RBRACKET        reduce using rule 37 (expr -> expr DOTSUB expr .)
    RPAREN          reduce using rule 37 (expr -> expr DOTSUB expr .)
    FOR             reduce using rule 37 (expr -> expr DOTSUB expr .)
    WHILE           reduce using rule 37 (expr -> expr DOTSUB expr .)
    IF              reduce using rule 37 (expr -> expr DOTSUB expr .)
    LBRACE          reduce using rule 37 (expr -> expr DOTSUB expr .)
    CONTINUE        reduce using rule 37 (expr -> expr DOTSUB expr .)
    BREAK           reduce using rule 37 (expr -> expr DOTSUB expr .)
    RETURN          reduce using rule 37 (expr -> expr DOTSUB expr .)
    PRINT           reduce using rule 37 (expr -> expr DOTSUB expr .)
    ID              reduce using rule 37 (expr -> expr DOTSUB expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58


state 85

    (38) expr -> expr DOTADD expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 38 (expr -> expr DOTADD expr .)
    DOTSUB          reduce using rule 38 (expr -> expr DOTADD expr .)
    DOTADD          reduce using rule 38 (expr -> expr DOTADD expr .)
    MINUS           reduce using rule 38 (expr -> expr DOTADD expr .)
    PLUS            reduce using rule 38 (expr -> expr DOTADD expr .)
    GTE             reduce using rule 38 (expr -> expr DOTADD expr .)
    LTE             reduce using rule 38 (expr -> expr DOTADD expr .)
    GT              reduce using rule 38 (expr -> expr DOTADD expr .)
    LT              reduce using rule 38 (expr -> expr DOTADD expr .)
    NEQ             reduce using rule 38 (expr -> expr DOTADD expr .)
    EQ              reduce using rule 38 (expr -> expr DOTADD expr .)
    COMMA           reduce using rule 38 (expr -> expr DOTADD expr .)
    RBRACKET        reduce using rule 38 (expr -> expr DOTADD expr .)
    RPAREN          reduce using rule 38 (expr -> expr DOTADD expr .)
    FOR             reduce using rule 38 (expr -> expr DOTADD expr .)
    WHILE           reduce using rule 38 (expr -> expr DOTADD expr .)
    IF              reduce using rule 38 (expr -> expr DOTADD expr .)
    LBRACE          reduce using rule 38 (expr -> expr DOTADD expr .)
    CONTINUE        reduce using rule 38 (expr -> expr DOTADD expr .)
    BREAK           reduce using rule 38 (expr -> expr DOTADD expr .)
    RETURN          reduce using rule 38 (expr -> expr DOTADD expr .)
    PRINT           reduce using rule 38 (expr -> expr DOTADD expr .)
    ID              reduce using rule 38 (expr -> expr DOTADD expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58


state 86

    (39) expr -> expr DIVIDE expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 39 (expr -> expr DIVIDE expr .)
    DOTDIV          reduce using rule 39 (expr -> expr DIVIDE expr .)
    DOTMUL          reduce using rule 39 (expr -> expr DIVIDE expr .)
    DOTSUB          reduce using rule 39 (expr -> expr DIVIDE expr .)
    DOTADD          reduce using rule 39 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 39 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 39 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 39 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 39 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 39 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 39 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 39 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 39 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 39 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 39 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 39 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 39 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 39 (expr -> expr DIVIDE expr .)
    FOR             reduce using rule 39 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 39 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 39 (expr -> expr DIVIDE expr .)
    LBRACE          reduce using rule 39 (expr -> expr DIVIDE expr .)
    CONTINUE        reduce using rule 39 (expr -> expr DIVIDE expr .)
    BREAK           reduce using rule 39 (expr -> expr DIVIDE expr .)
    RETURN          reduce using rule 39 (expr -> expr DIVIDE expr .)
    PRINT           reduce using rule 39 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 39 (expr -> expr DIVIDE expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52


state 87

    (40) expr -> expr TIMES expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 40 (expr -> expr TIMES expr .)
    DOTDIV          reduce using rule 40 (expr -> expr TIMES expr .)
    DOTMUL          reduce using rule 40 (expr -> expr TIMES expr .)
    DOTSUB          reduce using rule 40 (expr -> expr TIMES expr .)
    DOTADD          reduce using rule 40 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 40 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 40 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 40 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 40 (expr -> expr TIMES expr .)
    GTE             reduce using rule 40 (expr -> expr TIMES expr .)
    LTE             reduce using rule 40 (expr -> expr TIMES expr .)
    GT              reduce using rule 40 (expr -> expr TIMES expr .)
    LT              reduce using rule 40 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 40 (expr -> expr TIMES expr .)
    EQ              reduce using rule 40 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 40 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 40 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 40 (expr -> expr TIMES expr .)
    FOR             reduce using rule 40 (expr -> expr TIMES expr .)
    WHILE           reduce using rule 40 (expr -> expr TIMES expr .)
    IF              reduce using rule 40 (expr -> expr TIMES expr .)
    LBRACE          reduce using rule 40 (expr -> expr TIMES expr .)
    CONTINUE        reduce using rule 40 (expr -> expr TIMES expr .)
    BREAK           reduce using rule 40 (expr -> expr TIMES expr .)
    RETURN          reduce using rule 40 (expr -> expr TIMES expr .)
    PRINT           reduce using rule 40 (expr -> expr TIMES expr .)
    ID              reduce using rule 40 (expr -> expr TIMES expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52


state 88

    (41) expr -> expr MINUS expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 41 (expr -> expr MINUS expr .)
    DOTSUB          reduce using rule 41 (expr -> expr MINUS expr .)
    DOTADD          reduce using rule 41 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 41 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 41 (expr -> expr MINUS expr .)
    GTE             reduce using rule 41 (expr -> expr MINUS expr .)
    LTE             reduce using rule 41 (expr -> expr MINUS expr .)
    GT              reduce using rule 41 (expr -> expr MINUS expr .)
    LT              reduce using rule 41 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 41 (expr -> expr MINUS expr .)
    EQ              reduce using rule 41 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 41 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 41 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 41 (expr -> expr MINUS expr .)
    FOR             reduce using rule 41 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 41 (expr -> expr MINUS expr .)
    IF              reduce using rule 41 (expr -> expr MINUS expr .)
    LBRACE          reduce using rule 41 (expr -> expr MINUS expr .)
    CONTINUE        reduce using rule 41 (expr -> expr MINUS expr .)
    BREAK           reduce using rule 41 (expr -> expr MINUS expr .)
    RETURN          reduce using rule 41 (expr -> expr MINUS expr .)
    PRINT           reduce using rule 41 (expr -> expr MINUS expr .)
    ID              reduce using rule 41 (expr -> expr MINUS expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58


state 89

    (42) expr -> expr PLUS expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 42 (expr -> expr PLUS expr .)
    DOTSUB          reduce using rule 42 (expr -> expr PLUS expr .)
    DOTADD          reduce using rule 42 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 42 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 42 (expr -> expr PLUS expr .)
    GTE             reduce using rule 42 (expr -> expr PLUS expr .)
    LTE             reduce using rule 42 (expr -> expr PLUS expr .)
    GT              reduce using rule 42 (expr -> expr PLUS expr .)
    LT              reduce using rule 42 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 42 (expr -> expr PLUS expr .)
    EQ              reduce using rule 42 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 42 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 42 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 42 (expr -> expr PLUS expr .)
    FOR             reduce using rule 42 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 42 (expr -> expr PLUS expr .)
    IF              reduce using rule 42 (expr -> expr PLUS expr .)
    LBRACE          reduce using rule 42 (expr -> expr PLUS expr .)
    CONTINUE        reduce using rule 42 (expr -> expr PLUS expr .)
    BREAK           reduce using rule 42 (expr -> expr PLUS expr .)
    RETURN          reduce using rule 42 (expr -> expr PLUS expr .)
    PRINT           reduce using rule 42 (expr -> expr PLUS expr .)
    ID              reduce using rule 42 (expr -> expr PLUS expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58


state 90

    (43) expr -> expr GTE expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 43 (expr -> expr GTE expr .)
    GTE             reduce using rule 43 (expr -> expr GTE expr .)
    LTE             reduce using rule 43 (expr -> expr GTE expr .)
    GT              reduce using rule 43 (expr -> expr GTE expr .)
    LT              reduce using rule 43 (expr -> expr GTE expr .)
    NEQ             reduce using rule 43 (expr -> expr GTE expr .)
    EQ              reduce using rule 43 (expr -> expr GTE expr .)
    COMMA           reduce using rule 43 (expr -> expr GTE expr .)
    RBRACKET        reduce using rule 43 (expr -> expr GTE expr .)
    RPAREN          reduce using rule 43 (expr -> expr GTE expr .)
    FOR             reduce using rule 43 (expr -> expr GTE expr .)
    WHILE           reduce using rule 43 (expr -> expr GTE expr .)
    IF              reduce using rule 43 (expr -> expr GTE expr .)
    LBRACE          reduce using rule 43 (expr -> expr GTE expr .)
    CONTINUE        reduce using rule 43 (expr -> expr GTE expr .)
    BREAK           reduce using rule 43 (expr -> expr GTE expr .)
    RETURN          reduce using rule 43 (expr -> expr GTE expr .)
    PRINT           reduce using rule 43 (expr -> expr GTE expr .)
    ID              reduce using rule 43 (expr -> expr GTE expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60


state 91

    (44) expr -> expr LTE expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 44 (expr -> expr LTE expr .)
    GTE             reduce using rule 44 (expr -> expr LTE expr .)
    LTE             reduce using rule 44 (expr -> expr LTE expr .)
    GT              reduce using rule 44 (expr -> expr LTE expr .)
    LT              reduce using rule 44 (expr -> expr LTE expr .)
    NEQ             reduce using rule 44 (expr -> expr LTE expr .)
    EQ              reduce using rule 44 (expr -> expr LTE expr .)
    COMMA           reduce using rule 44 (expr -> expr LTE expr .)
    RBRACKET        reduce using rule 44 (expr -> expr LTE expr .)
    RPAREN          reduce using rule 44 (expr -> expr LTE expr .)
    FOR             reduce using rule 44 (expr -> expr LTE expr .)
    WHILE           reduce using rule 44 (expr -> expr LTE expr .)
    IF              reduce using rule 44 (expr -> expr LTE expr .)
    LBRACE          reduce using rule 44 (expr -> expr LTE expr .)
    CONTINUE        reduce using rule 44 (expr -> expr LTE expr .)
    BREAK           reduce using rule 44 (expr -> expr LTE expr .)
    RETURN          reduce using rule 44 (expr -> expr LTE expr .)
    PRINT           reduce using rule 44 (expr -> expr LTE expr .)
    ID              reduce using rule 44 (expr -> expr LTE expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60


state 92

    (45) expr -> expr GT expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 45 (expr -> expr GT expr .)
    GTE             reduce using rule 45 (expr -> expr GT expr .)
    LTE             reduce using rule 45 (expr -> expr GT expr .)
    GT              reduce using rule 45 (expr -> expr GT expr .)
    LT              reduce using rule 45 (expr -> expr GT expr .)
    NEQ             reduce using rule 45 (expr -> expr GT expr .)
    EQ              reduce using rule 45 (expr -> expr GT expr .)
    COMMA           reduce using rule 45 (expr -> expr GT expr .)
    RBRACKET        reduce using rule 45 (expr -> expr GT expr .)
    RPAREN          reduce using rule 45 (expr -> expr GT expr .)
    FOR             reduce using rule 45 (expr -> expr GT expr .)
    WHILE           reduce using rule 45 (expr -> expr GT expr .)
    IF              reduce using rule 45 (expr -> expr GT expr .)
    LBRACE          reduce using rule 45 (expr -> expr GT expr .)
    CONTINUE        reduce using rule 45 (expr -> expr GT expr .)
    BREAK           reduce using rule 45 (expr -> expr GT expr .)
    RETURN          reduce using rule 45 (expr -> expr GT expr .)
    PRINT           reduce using rule 45 (expr -> expr GT expr .)
    ID              reduce using rule 45 (expr -> expr GT expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60


state 93

    (46) expr -> expr LT expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 46 (expr -> expr LT expr .)
    GTE             reduce using rule 46 (expr -> expr LT expr .)
    LTE             reduce using rule 46 (expr -> expr LT expr .)
    GT              reduce using rule 46 (expr -> expr LT expr .)
    LT              reduce using rule 46 (expr -> expr LT expr .)
    NEQ             reduce using rule 46 (expr -> expr LT expr .)
    EQ              reduce using rule 46 (expr -> expr LT expr .)
    COMMA           reduce using rule 46 (expr -> expr LT expr .)
    RBRACKET        reduce using rule 46 (expr -> expr LT expr .)
    RPAREN          reduce using rule 46 (expr -> expr LT expr .)
    FOR             reduce using rule 46 (expr -> expr LT expr .)
    WHILE           reduce using rule 46 (expr -> expr LT expr .)
    IF              reduce using rule 46 (expr -> expr LT expr .)
    LBRACE          reduce using rule 46 (expr -> expr LT expr .)
    CONTINUE        reduce using rule 46 (expr -> expr LT expr .)
    BREAK           reduce using rule 46 (expr -> expr LT expr .)
    RETURN          reduce using rule 46 (expr -> expr LT expr .)
    PRINT           reduce using rule 46 (expr -> expr LT expr .)
    ID              reduce using rule 46 (expr -> expr LT expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60


state 94

    (47) expr -> expr NEQ expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 47 (expr -> expr NEQ expr .)
    NEQ             reduce using rule 47 (expr -> expr NEQ expr .)
    EQ              reduce using rule 47 (expr -> expr NEQ expr .)
    COMMA           reduce using rule 47 (expr -> expr NEQ expr .)
    RBRACKET        reduce using rule 47 (expr -> expr NEQ expr .)
    RPAREN          reduce using rule 47 (expr -> expr NEQ expr .)
    FOR             reduce using rule 47 (expr -> expr NEQ expr .)
    WHILE           reduce using rule 47 (expr -> expr NEQ expr .)
    IF              reduce using rule 47 (expr -> expr NEQ expr .)
    LBRACE          reduce using rule 47 (expr -> expr NEQ expr .)
    CONTINUE        reduce using rule 47 (expr -> expr NEQ expr .)
    BREAK           reduce using rule 47 (expr -> expr NEQ expr .)
    RETURN          reduce using rule 47 (expr -> expr NEQ expr .)
    PRINT           reduce using rule 47 (expr -> expr NEQ expr .)
    ID              reduce using rule 47 (expr -> expr NEQ expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64


state 95

    (48) expr -> expr EQ expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 48 (expr -> expr EQ expr .)
    NEQ             reduce using rule 48 (expr -> expr EQ expr .)
    EQ              reduce using rule 48 (expr -> expr EQ expr .)
    COMMA           reduce using rule 48 (expr -> expr EQ expr .)
    RBRACKET        reduce using rule 48 (expr -> expr EQ expr .)
    RPAREN          reduce using rule 48 (expr -> expr EQ expr .)
    FOR             reduce using rule 48 (expr -> expr EQ expr .)
    WHILE           reduce using rule 48 (expr -> expr EQ expr .)
    IF              reduce using rule 48 (expr -> expr EQ expr .)
    LBRACE          reduce using rule 48 (expr -> expr EQ expr .)
    CONTINUE        reduce using rule 48 (expr -> expr EQ expr .)
    BREAK           reduce using rule 48 (expr -> expr EQ expr .)
    RETURN          reduce using rule 48 (expr -> expr EQ expr .)
    PRINT           reduce using rule 48 (expr -> expr EQ expr .)
    ID              reduce using rule 48 (expr -> expr EQ expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64


state 96

    (23) expr -> ID LBRACKET indexes . RBRACKET
    (53) indexes -> indexes . RBRACKET LBRACKET expr
    (54) indexes -> indexes . COMMA expr
    RBRACKET        shift and go to state 109
    COMMA           shift and go to state 78


state 97

    (49) matrix -> LBRACKET elements RBRACKET .
    LINE_END        reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    COLON           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    TRANSPOSE       reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    DOTDIV          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    DOTMUL          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    DOTSUB          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    DOTADD          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    TIMES           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    GTE             reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    LTE             reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    GT              reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    LT              reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    NEQ             reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    EQ              reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    FOR             reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    WHILE           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    IF              reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    LBRACE          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    CONTINUE        reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    BREAK           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    RETURN          reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    PRINT           reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)
    ID              reduce using rule 49 (matrix -> LBRACKET elements RBRACKET .)


state 98

    (27) expr -> ONES LPAREN elements . RPAREN
    RPAREN          shift and go to state 110


state 99

    (34) expr -> LPAREN expr RPAREN .
    LINE_END        reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    COLON           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    TRANSPOSE       reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    DOTDIV          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    DOTMUL          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    DOTSUB          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    DOTADD          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    FOR             reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    IF              reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    LBRACE          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    CONTINUE        reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    BREAK           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    PRINT           reduce using rule 34 (expr -> LPAREN expr RPAREN .)
    ID              reduce using rule 34 (expr -> LPAREN expr RPAREN .)


state 100

    (28) expr -> ZEROS LPAREN elements . RPAREN
    RPAREN          shift and go to state 111


state 101

    (29) expr -> EYE LPAREN elements . RPAREN
    RPAREN          shift and go to state 112


state 102

    (51) elements -> expr COMMA elements .
    LINE_END        reduce using rule 51 (elements -> expr COMMA elements .)
    RBRACKET        reduce using rule 51 (elements -> expr COMMA elements .)
    RPAREN          reduce using rule 51 (elements -> expr COMMA elements .)


state 103

    (6) instruction -> FOR ID ASSIGN expr COLON . expr instruction
    (22) expr -> expr COLON . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 113
    matrix                         shift and go to state 32

state 104

    (53) indexes -> indexes RBRACKET LBRACKET . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 114
    matrix                         shift and go to state 32

state 105

    (15) assignment -> ID LBRACKET indexes RBRACKET assign . expr
    (22) expr -> . expr COLON expr
    (23) expr -> . ID LBRACKET indexes RBRACKET
    (24) expr -> . matrix
    (25) expr -> . expr TRANSPOSE
    (26) expr -> . MINUS expr
    (27) expr -> . ONES LPAREN elements RPAREN
    (28) expr -> . ZEROS LPAREN elements RPAREN
    (29) expr -> . EYE LPAREN elements RPAREN
    (30) expr -> . ID
    (31) expr -> . STRING
    (32) expr -> . FLOATNUM
    (33) expr -> . INTNUM
    (34) expr -> . LPAREN expr RPAREN
    (35) expr -> . expr DOTDIV expr
    (36) expr -> . expr DOTMUL expr
    (37) expr -> . expr DOTSUB expr
    (38) expr -> . expr DOTADD expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (43) expr -> . expr GTE expr
    (44) expr -> . expr LTE expr
    (45) expr -> . expr GT expr
    (46) expr -> . expr LT expr
    (47) expr -> . expr NEQ expr
    (48) expr -> . expr EQ expr
    (49) matrix -> . LBRACKET elements RBRACKET
    ID              shift and go to state 30
    MINUS           shift and go to state 33
    ONES            shift and go to state 34
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    STRING          shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40
    LPAREN          shift and go to state 35
    LBRACKET        shift and go to state 31

    expr                           shift and go to state 115
    matrix                         shift and go to state 32

state 106

    (54) indexes -> indexes COMMA expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    RBRACKET        reduce using rule 54 (indexes -> indexes COMMA expr .)
    COMMA           reduce using rule 54 (indexes -> indexes COMMA expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 107

    (7) instruction -> WHILE LPAREN expr RPAREN instruction .
    FOR             reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    WHILE           reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    IF              reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    LBRACE          reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    CONTINUE        reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    BREAK           reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    RETURN          reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    PRINT           reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    ID              reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    $end            reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    RBRACE          reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)
    ELSE            reduce using rule 7 (instruction -> WHILE LPAREN expr RPAREN instruction .)


state 108

    (8) instruction -> IF LPAREN expr RPAREN instruction . ELSE instruction
    (9) instruction -> IF LPAREN expr RPAREN instruction .
    ELSE            shift and go to state 116
    FOR             reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    WHILE           reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    IF              reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    LBRACE          reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    CONTINUE        reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    BREAK           reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    RETURN          reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    PRINT           reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    ID              reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    $end            reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)
    RBRACE          reduce using rule 9 (instruction -> IF LPAREN expr RPAREN instruction .)


state 109

    (23) expr -> ID LBRACKET indexes RBRACKET .
    (53) indexes -> indexes RBRACKET . LBRACKET expr
    LINE_END        reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    COLON           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    TRANSPOSE       reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    DOTDIV          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    DOTMUL          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    DOTSUB          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    DOTADD          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    DIVIDE          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    TIMES           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    MINUS           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    PLUS            reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    GTE             reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    LTE             reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    GT              reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    LT              reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    NEQ             reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    EQ              reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    COMMA           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    RBRACKET        reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    RPAREN          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    FOR             reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    WHILE           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    IF              reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    LBRACE          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    CONTINUE        reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    BREAK           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    RETURN          reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    PRINT           reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    ID              reduce using rule 23 (expr -> ID LBRACKET indexes RBRACKET .)
    LBRACKET        shift and go to state 104


state 110

    (27) expr -> ONES LPAREN elements RPAREN .
    LINE_END        reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    COLON           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    TRANSPOSE       reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    DOTDIV          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    DOTMUL          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    DOTSUB          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    DOTADD          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    TIMES           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    MINUS           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    PLUS            reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    GTE             reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    LTE             reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    GT              reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    LT              reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    NEQ             reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    EQ              reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    COMMA           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    RPAREN          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    FOR             reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    WHILE           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    IF              reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    LBRACE          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    CONTINUE        reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    BREAK           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    RETURN          reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    PRINT           reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)
    ID              reduce using rule 27 (expr -> ONES LPAREN elements RPAREN .)


state 111

    (28) expr -> ZEROS LPAREN elements RPAREN .
    LINE_END        reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    COLON           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    TRANSPOSE       reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTDIV          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTMUL          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTSUB          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    DOTADD          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    TIMES           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    MINUS           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    PLUS            reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    GTE             reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    LTE             reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    GT              reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    LT              reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    NEQ             reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    EQ              reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    COMMA           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    RPAREN          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    FOR             reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    WHILE           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    IF              reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    LBRACE          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    CONTINUE        reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    BREAK           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    RETURN          reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    PRINT           reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)
    ID              reduce using rule 28 (expr -> ZEROS LPAREN elements RPAREN .)


state 112

    (29) expr -> EYE LPAREN elements RPAREN .
    LINE_END        reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    COLON           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    TRANSPOSE       reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    DOTDIV          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    DOTMUL          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    DOTSUB          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    DOTADD          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    TIMES           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    MINUS           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    PLUS            reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    GTE             reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    LTE             reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    GT              reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    LT              reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    NEQ             reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    EQ              reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    COMMA           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    RPAREN          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    FOR             reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    WHILE           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    IF              reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    LBRACE          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    CONTINUE        reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    BREAK           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    RETURN          reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    PRINT           reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)
    ID              reduce using rule 29 (expr -> EYE LPAREN elements RPAREN .)


state 113

    (6) instruction -> FOR ID ASSIGN expr COLON expr . instruction
    (22) expr -> expr COLON expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    COLON           reduce using rule 22 (expr -> expr COLON expr .)
    TRANSPOSE       reduce using rule 22 (expr -> expr COLON expr .)
    DOTDIV          reduce using rule 22 (expr -> expr COLON expr .)
    DOTMUL          reduce using rule 22 (expr -> expr COLON expr .)
    DOTSUB          reduce using rule 22 (expr -> expr COLON expr .)
    DOTADD          reduce using rule 22 (expr -> expr COLON expr .)
    DIVIDE          reduce using rule 22 (expr -> expr COLON expr .)
    TIMES           reduce using rule 22 (expr -> expr COLON expr .)
    MINUS           reduce using rule 22 (expr -> expr COLON expr .)
    PLUS            reduce using rule 22 (expr -> expr COLON expr .)
    GTE             reduce using rule 22 (expr -> expr COLON expr .)
    LTE             reduce using rule 22 (expr -> expr COLON expr .)
    GT              reduce using rule 22 (expr -> expr COLON expr .)
    LT              reduce using rule 22 (expr -> expr COLON expr .)
    NEQ             reduce using rule 22 (expr -> expr COLON expr .)
    EQ              reduce using rule 22 (expr -> expr COLON expr .)
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 117
    assignment                     shift and go to state 4

state 114

    (53) indexes -> indexes RBRACKET LBRACKET expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    RBRACKET        reduce using rule 53 (indexes -> indexes RBRACKET LBRACKET expr .)
    COMMA           reduce using rule 53 (indexes -> indexes RBRACKET LBRACKET expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 115

    (15) assignment -> ID LBRACKET indexes RBRACKET assign expr .
    (22) expr -> expr . COLON expr
    (25) expr -> expr . TRANSPOSE
    (35) expr -> expr . DOTDIV expr
    (36) expr -> expr . DOTMUL expr
    (37) expr -> expr . DOTSUB expr
    (38) expr -> expr . DOTADD expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    (43) expr -> expr . GTE expr
    (44) expr -> expr . LTE expr
    (45) expr -> expr . GT expr
    (46) expr -> expr . LT expr
    (47) expr -> expr . NEQ expr
    (48) expr -> expr . EQ expr
    LINE_END        reduce using rule 15 (assignment -> ID LBRACKET indexes RBRACKET assign expr .)
    COLON           shift and go to state 51
    TRANSPOSE       shift and go to state 52
    DOTDIV          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTSUB          shift and go to state 55
    DOTADD          shift and go to state 56
    DIVIDE          shift and go to state 57
    TIMES           shift and go to state 58
    MINUS           shift and go to state 59
    PLUS            shift and go to state 60
    GTE             shift and go to state 61
    LTE             shift and go to state 62
    GT              shift and go to state 63
    LT              shift and go to state 64
    NEQ             shift and go to state 65
    EQ              shift and go to state 66


state 116

    (8) instruction -> IF LPAREN expr RPAREN instruction ELSE . instruction
    (5) instruction -> . assignment LINE_END
    (6) instruction -> . FOR ID ASSIGN expr COLON expr instruction
    (7) instruction -> . WHILE LPAREN expr RPAREN instruction
    (8) instruction -> . IF LPAREN expr RPAREN instruction ELSE instruction
    (9) instruction -> . IF LPAREN expr RPAREN instruction
    (10) instruction -> . LBRACE instructions RBRACE
    (11) instruction -> . CONTINUE LINE_END
    (12) instruction -> . BREAK LINE_END
    (13) instruction -> . RETURN expr LINE_END
    (14) instruction -> . PRINT elements LINE_END
    (15) assignment -> . ID LBRACKET indexes RBRACKET assign expr
    (16) assignment -> . ID assign expr
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    LBRACE          shift and go to state 9
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 6

    instruction                    shift and go to state 118
    assignment                     shift and go to state 4

state 117

    (6) instruction -> FOR ID ASSIGN expr COLON expr instruction .
    FOR             reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    WHILE           reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    IF              reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    LBRACE          reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    CONTINUE        reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    BREAK           reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    RETURN          reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    PRINT           reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    ID              reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    $end            reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    RBRACE          reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)
    ELSE            reduce using rule 6 (instruction -> FOR ID ASSIGN expr COLON expr instruction .)


state 118

    (8) instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .
    FOR             reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    IF              reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    LBRACE          reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    CONTINUE        reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    BREAK           reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    ID              reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    $end            reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    RBRACE          reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 8 (instruction -> IF LPAREN expr RPAREN instruction ELSE instruction .)
